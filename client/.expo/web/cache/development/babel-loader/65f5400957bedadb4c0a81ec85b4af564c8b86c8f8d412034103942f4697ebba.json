{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ProfileBanner from \"./ProfileBanner\";\nimport EventCard from \"./EventCard\";\nimport { useAppContext } from \"./AppContext\";\nimport userApi from \"../api/userApi\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    setLoggedIn = _useAppContext.setLoggedIn,\n    myEvents = _useAppContext.myEvents,\n    setMyEvents = _useAppContext.setMyEvents,\n    myRsvps = _useAppContext.myRsvps,\n    setMyRsvps = _useAppContext.setMyRsvps,\n    setBrowseEvents = _useAppContext.setBrowseEvents,\n    myInterested = _useAppContext.myInterested,\n    setMyInterested = _useAppContext.setMyInterested;\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var eventsData = yield userApi.getMyEvents(user._id);\n          setMyEvents(eventsData || []);\n          var rsvpData = yield userApi.getMyRsvps(user._id);\n          setMyRsvps(rsvpData || []);\n          var interestedData = yield userApi.getMyInterested(user._id);\n          setMyInterested(interestedData);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [user._id, setMyEvents, setMyRsvps]);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(ProfileBanner, {\n      user: user,\n      setLoggedIn: setLoggedIn\n    }), _jsxs(View, {\n      style: styles.eventsContainer,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Hosting\"\n      }), myEvents && myEvents.length > 0 ? _jsx(View, {\n        style: styles.row,\n        children: _jsx(ScrollView, {\n          style: styles.scrollView,\n          children: myEvents.map(function (event) {\n            return _jsx(EventCard, {\n              cardStyles: cardStyles,\n              event: event,\n              userId: user && user._id,\n              setMyEvents: setMyEvents,\n              setMyRsvps: setMyRsvps,\n              setBrowseEvents: setBrowseEvents\n            }, event._id);\n          })\n        })\n      }) : _jsx(Text, {\n        children: \"Not hosting any events\"\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Attending\"\n      }), myRsvps && myRsvps.length > 0 ? _jsx(View, {\n        style: styles.row,\n        children: _jsx(ScrollView, {\n          style: styles.scrollView,\n          children: myRsvps.map(function (event) {\n            return _jsx(EventCard, {\n              cardStyles: cardStyles,\n              event: event,\n              userId: user && user._id,\n              setMyEvents: setMyEvents,\n              setMyRsvps: setMyRsvps,\n              setBrowseEvents: setBrowseEvents\n            }, event._id);\n          })\n        })\n      }) : _jsx(Text, {\n        children: \"Not Attending any events\"\n      }), _jsx(Text, {\n        style: styles.label,\n        children: \"Interested\"\n      }), myInterested && myInterested.length > 0 ? _jsx(View, {\n        style: styles.row,\n        children: _jsx(ScrollView, {\n          style: styles.scrollView,\n          children: myInterested.map(function (event) {\n            return _jsx(EventCard, {\n              cardStyles: cardStyles,\n              event: event,\n              userId: user && user._id,\n              setMyEvents: setMyEvents,\n              setMyRsvps: setMyRsvps,\n              setBrowseEvents: setBrowseEvents\n            }, event._id);\n          })\n        })\n      }) : _jsx(Text, {\n        children: \"Not interested in any events\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: hp('1%')\n  },\n  eventsContainer: {\n    width: wp('100%')\n  },\n  label: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    color: 'black'\n  },\n  scrollView: {\n    width: wp('90%')\n  },\n  row: {\n    paddingTop: hp('0%')\n  }\n});\nvar cardStyles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8,\n    margin: 8,\n    elevation: 2\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  icon: {\n    width: 24,\n    height: 24\n  },\n  imageContainer: {},\n  swiper: {\n    height: hp('100%')\n  },\n  image: {\n    height: '100%',\n    width: wp('100%'),\n    borderRadius: 8\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","ScrollView","ProfileBanner","EventCard","useAppContext","userApi","heightPercentageToDP","hp","widthPercentageToDP","wp","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useAppContext","user","setLoggedIn","myEvents","setMyEvents","myRsvps","setMyRsvps","setBrowseEvents","myInterested","setMyInterested","fetchData","_ref","_asyncToGenerator","eventsData","getMyEvents","_id","rsvpData","getMyRsvps","interestedData","getMyInterested","error","console","apply","arguments","style","styles","container","children","eventsContainer","label","length","row","scrollView","map","event","cardStyles","userId","create","flex","marginBottom","width","fontSize","fontWeight","color","paddingTop","card","backgroundColor","padding","borderRadius","margin","elevation","title","flexDirection","justifyContent","alignItems","icon","height","imageContainer","swiper","image","modalContent","modalButtons","marginTop"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ProfileScreen.js"],"sourcesContent":["// ProfileScreen.js\r\nimport React, { useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport ProfileBanner from './ProfileBanner';\r\nimport EventCard from './EventCard';\r\nimport { useAppContext } from './AppContext'; // Import the useAppContext hook\r\nimport userApi from '../api/userApi';\r\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\n\r\nconst ProfileScreen = () => {\r\n  // Use the useAppContext hook to access the shared state\r\n  const {\r\n    user,\r\n    setLoggedIn,\r\n    myEvents,\r\n    setMyEvents,\r\n    myRsvps,\r\n    setMyRsvps,\r\n    setBrowseEvents,\r\n    myInterested,\r\n    setMyInterested,\r\n  } = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Use the user from context\r\n        const eventsData = await userApi.getMyEvents(user._id);\r\n        setMyEvents(eventsData || []); // Ensure eventsData is an array or default to an empty array\r\n        const rsvpData = await userApi.getMyRsvps(user._id);\r\n        setMyRsvps(rsvpData || []); // Ensure rsvpData is an array or default to an empty array\r\n        const interestedData = await userApi.getMyInterested(user._id);\r\n        setMyInterested(interestedData)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        // Handle the error as needed, e.g., show an error message to the user\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user._id, setMyEvents, setMyRsvps]);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <ProfileBanner user={user} setLoggedIn={setLoggedIn} />\r\n      <View style={styles.eventsContainer}>\r\n\r\n        <Text style={styles.label}>Hosting</Text>\r\n        {myEvents && myEvents.length > 0 ?\r\n          <View style={styles.row}>\r\n            <ScrollView style={styles.scrollView}>\r\n              {\r\n                myEvents.map((event) => (\r\n                  <EventCard cardStyles={cardStyles} key={event._id} event={event} userId={user && user._id} setMyEvents={setMyEvents} setMyRsvps={setMyRsvps} setBrowseEvents={setBrowseEvents} />\r\n                ))}\r\n            </ScrollView>\r\n          </View>\r\n          :\r\n          <Text>Not hosting any events</Text>\r\n        }\r\n        <Text style={styles.label}>Attending</Text>\r\n        {myRsvps && myRsvps.length > 0 ?\r\n          <View style={styles.row}>\r\n\r\n            <ScrollView style={styles.scrollView}>\r\n\r\n              {myRsvps.map((event) => (\r\n                <EventCard cardStyles={cardStyles} key={event._id} event={event} userId={user && user._id} setMyEvents={setMyEvents} setMyRsvps={setMyRsvps} setBrowseEvents={setBrowseEvents} />\r\n              ))}\r\n            </ScrollView>\r\n          </View>\r\n          :\r\n          <Text>Not Attending any events</Text>\r\n        }\r\n        <Text style={styles.label}>Interested</Text>\r\n        {myInterested && myInterested.length > 0 ?\r\n          <View style={styles.row}>\r\n            <ScrollView style={styles.scrollView}>\r\n              {\r\n                myInterested.map((event) => (\r\n                  <EventCard cardStyles={cardStyles} key={event._id} event={event} userId={user && user._id} setMyEvents={setMyEvents} setMyRsvps={setMyRsvps} setBrowseEvents={setBrowseEvents} />\r\n                ))}\r\n            </ScrollView>\r\n          </View>\r\n          :\r\n          <Text>Not interested in any events</Text>\r\n        }\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginBottom: hp('1%'),\r\n  },\r\n  eventsContainer: {\r\n    width: wp('100%')\r\n    // alignItems: 'center',\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: 'black',\r\n  },\r\n  scrollView: {\r\n    width: wp('90%'), // this plus marginLeft and marginRight of container must = 100 to be centered\r\n    // height: hp('25%')\r\n  },\r\n  row: {\r\n    // height: hp\r\n    paddingTop: hp('0%')\r\n  }\r\n});\r\n\r\nconst cardStyles = StyleSheet.create({\r\n  card: {\r\n    backgroundColor: 'white',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    margin: 8,\r\n    elevation: 2,\r\n    // height: hp('25%')\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  icon: {\r\n    width: 24,\r\n    height: 24,\r\n  },\r\n  imageContainer: {\r\n    // height: hp('50%'), // Adjust the height as needed\r\n    // marginBottom: hp('12%'), // Add margin as needed\r\n  },\r\n  swiper: {\r\n    height: hp('100%'), // Take the full height of the container\r\n  },\r\n  image: {\r\n    height: '100%', // Take the full height of the Swiper\r\n    width: wp('100%'), // Take the full width of the Swiper\r\n    borderRadius: 8, // Adjust the border radius as needed\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n  },\r\n  modalButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 8,\r\n  },\r\n})\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}