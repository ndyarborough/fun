{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ProfileBanner from \"./ProfileBanner\";\nimport EventList from \"./EventList\";\nimport { useAppContext } from \"./AppContext\";\nimport userApi from \"../api/userApi\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    setLoggedIn = _useAppContext.setLoggedIn,\n    myEvents = _useAppContext.myEvents,\n    setMyEvents = _useAppContext.setMyEvents,\n    myRsvps = _useAppContext.myRsvps,\n    setMyRsvps = _useAppContext.setMyRsvps,\n    myInterested = _useAppContext.myInterested,\n    setMyInterested = _useAppContext.setMyInterested;\n  var _useState = useState('all'),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedSection = _useState2[0],\n    setSelectedSection = _useState2[1];\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var eventsData = yield userApi.getMyEvents(user._id);\n          setMyEvents(eventsData || []);\n          var rsvpData = yield userApi.getMyRsvps(user._id);\n          setMyRsvps(rsvpData || []);\n          var interestedData = yield userApi.getMyInterested(user._id);\n          setMyInterested(interestedData);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [user._id, setMyEvents, setMyRsvps]);\n  var handleSectionChange = function handleSectionChange(section) {\n    setSelectedSection(section);\n  };\n  var sections = [{\n    key: 'all',\n    title: 'All'\n  }, {\n    key: 'hosting',\n    title: 'Hosting'\n  }, {\n    key: 'attending',\n    title: 'Attending'\n  }, {\n    key: 'interested',\n    title: 'Interested'\n  }];\n  var renderHeader = function renderHeader() {\n    return _jsx(View, {\n      style: styles.sectionToggleContainer,\n      children: sections.map(function (item) {\n        return _jsx(Pressable, {\n          onPress: function onPress() {\n            return handleSectionChange(item.key);\n          },\n          style: function style(_ref2) {\n            var pressed = _ref2.pressed;\n            return {\n              opacity: pressed ? 0.5 : 1\n            };\n          },\n          children: _jsx(Text, {\n            style: selectedSection === item.key ? styles.selectedToggleText : styles.toggleText,\n            children: item.title\n          })\n        }, item.key);\n      })\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(ProfileBanner, {\n      user: user,\n      setLoggedIn: setLoggedIn\n    }), _jsx(FlatList, {\n      data: [],\n      ListHeaderComponent: renderHeader,\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return null;\n      },\n      keyExtractor: function keyExtractor() {\n        return 'dummyKey';\n      }\n    }), _jsxs(View, {\n      style: styles.eventsContainer,\n      children: [selectedSection === 'all' && _jsx(EventList, {\n        events: (myEvents || []).concat(myRsvps || [], myInterested || []),\n        title: \"All\"\n      }), selectedSection === 'hosting' && _jsx(EventList, {\n        events: (myEvents || []).filter(function (event) {\n          return event.status !== 'cancelled';\n        }),\n        title: \"Hosting\"\n      }), selectedSection === 'attending' && _jsx(EventList, {\n        events: (myRsvps || []).filter(function (event) {\n          return event.status !== 'cancelled';\n        }),\n        title: \"Attending\"\n      }), selectedSection === 'interested' && _jsx(EventList, {\n        events: (myInterested || []).filter(function (event) {\n          return event.status !== 'cancelled';\n        }),\n        title: \"Interested\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: hp('1%')\n  },\n  eventsContainer: {\n    width: wp('90%'),\n    marginLeft: wp('5%'),\n    marginRight: wp('5%')\n  },\n  sectionToggleContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 10\n  },\n  toggleText: {\n    color: '#000',\n    padding: 10\n  },\n  selectedToggleText: {\n    color: '#00f',\n    padding: 10\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","useState","View","StyleSheet","ScrollView","Pressable","Text","FlatList","ProfileBanner","EventList","useAppContext","userApi","heightPercentageToDP","hp","widthPercentageToDP","wp","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useAppContext","user","setLoggedIn","myEvents","setMyEvents","myRsvps","setMyRsvps","myInterested","setMyInterested","_useState","_useState2","_slicedToArray","selectedSection","setSelectedSection","fetchData","_ref","_asyncToGenerator","eventsData","getMyEvents","_id","rsvpData","getMyRsvps","interestedData","getMyInterested","error","console","apply","arguments","handleSectionChange","section","sections","key","title","renderHeader","style","styles","sectionToggleContainer","children","map","item","onPress","_ref2","pressed","opacity","selectedToggleText","toggleText","container","data","ListHeaderComponent","renderItem","_ref3","keyExtractor","eventsContainer","events","concat","filter","event","status","create","flex","marginBottom","width","marginLeft","marginRight","flexDirection","justifyContent","color","padding"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ProfileScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, StyleSheet, ScrollView, Pressable, Text, FlatList } from 'react-native';\r\nimport ProfileBanner from './ProfileBanner';\r\nimport EventList from './EventList';\r\nimport { useAppContext } from './AppContext';\r\nimport userApi from '../api/userApi';\r\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\n\r\nconst ProfileScreen = () => {\r\n  const {\r\n    user,\r\n    setLoggedIn,\r\n    myEvents,\r\n    setMyEvents,\r\n    myRsvps,\r\n    setMyRsvps,\r\n    myInterested,\r\n    setMyInterested,\r\n  } = useAppContext();\r\n\r\n  const [selectedSection, setSelectedSection] = useState('all'); // Set 'all' as the default tab\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const eventsData = await userApi.getMyEvents(user._id);\r\n        setMyEvents(eventsData || []);\r\n        const rsvpData = await userApi.getMyRsvps(user._id);\r\n        setMyRsvps(rsvpData || []);\r\n        const interestedData = await userApi.getMyInterested(user._id);\r\n        setMyInterested(interestedData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user._id, setMyEvents, setMyRsvps]);\r\n\r\n  const handleSectionChange = (section) => {\r\n    setSelectedSection(section);\r\n  };\r\n\r\n  const sections = [\r\n    { key: 'all', title: 'All' },\r\n    { key: 'hosting', title: 'Hosting' },\r\n    { key: 'attending', title: 'Attending' },\r\n    { key: 'interested', title: 'Interested' },\r\n  ];\r\n\r\n  const renderHeader = () => (\r\n    <View style={styles.sectionToggleContainer}>\r\n      {sections.map(item => (\r\n        <Pressable\r\n          key={item.key}\r\n          onPress={() => handleSectionChange(item.key)}\r\n          style={({ pressed }) => ({ opacity: pressed ? 0.5 : 1 })}\r\n        >\r\n          <Text style={selectedSection === item.key ? styles.selectedToggleText : styles.toggleText}>\r\n            {item.title}\r\n          </Text>\r\n        </Pressable>\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ProfileBanner user={user} setLoggedIn={setLoggedIn} />\r\n\r\n      <FlatList\r\n        data={[]}\r\n        ListHeaderComponent={renderHeader}\r\n        renderItem={({ item }) => null}\r\n        keyExtractor={() => 'dummyKey'} // Provide a dummy key to avoid key extraction warnings\r\n      />\r\n\r\n      {/* Display EventList based on the selected section */}\r\n      <View style={styles.eventsContainer}>\r\n        {/* New condition for 'All' tab */}\r\n        {selectedSection === 'all' && (\r\n          <EventList events={(myEvents || []).concat(myRsvps || [], myInterested || [])} title=\"All\" />\r\n        )}\r\n        {selectedSection === 'hosting' && (\r\n          <EventList events={(myEvents || []).filter(event => event.status !== 'cancelled')} title=\"Hosting\" />\r\n        )}\r\n        {selectedSection === 'attending' && (\r\n          <EventList events={(myRsvps || []).filter(event => event.status !== 'cancelled')} title=\"Attending\" />\r\n        )}\r\n        {selectedSection === 'interested' && (\r\n          <EventList events={(myInterested || []).filter(event => event.status !== 'cancelled')} title=\"Interested\" />\r\n        )}\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginBottom: hp('1%'),\r\n  },\r\n  eventsContainer: {\r\n    width: wp('90%'),\r\n    marginLeft: wp('5%'),\r\n    marginRight: wp('5%'),\r\n  },\r\n  sectionToggleContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginBottom: 10,\r\n  },\r\n  toggleText: {\r\n    color: '#000',\r\n    padding: 10,\r\n  },\r\n  selectedToggleText: {\r\n    color: '#00f',\r\n    padding: 10,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}