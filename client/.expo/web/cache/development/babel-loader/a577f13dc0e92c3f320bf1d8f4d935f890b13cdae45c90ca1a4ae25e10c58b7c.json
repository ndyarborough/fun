{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport EventCard from \"./EventCard\";\nimport { useAppContext } from \"./AppContext\";\nimport eventApi from \"../api/eventApi\";\nimport PlusIcon from \"../assets/plus.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BrowseScreen = function BrowseScreen() {\n  var navigation = useNavigation();\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    setMyRsvps = _useAppContext.setMyRsvps,\n    setMyEvents = _useAppContext.setMyEvents,\n    browseEvents = _useAppContext.browseEvents,\n    setBrowseEvents = _useAppContext.setBrowseEvents;\n  useEffect(function () {\n    var fetchEvents = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var eventData = yield eventApi.getEvents();\n          setBrowseEvents(eventData);\n        } catch (error) {\n          console.error('Error fetching events:', error);\n        }\n      });\n      return function fetchEvents() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchEvents();\n  }, [setBrowseEvents]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.buttonContainer,\n      onPress: function onPress() {\n        navigation.navigate('Create Event');\n      },\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"Create Event\"\n      }), _jsx(Image, {\n        source: PlusIcon,\n        style: styles.plusIcon\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.scroll,\n      children: browseEvents ? browseEvents.map(function (event) {\n        return _jsx(EventCard, {\n          event: event,\n          userId: user._id,\n          setMyRsvps: setMyRsvps,\n          setMyEvents: setMyEvents,\n          setBrowseEvents: setBrowseEvents,\n          cardStyles: cardStyles\n        }, event._id);\n      }) : _jsx(Text, {\n        children: \"Issue Retrieving Events from the database\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scroll: {\n    width: wp('90%'),\n    maxWidth: 1000\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 12,\n    padding: 8,\n    backgroundColor: 'black',\n    margin: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonText: {\n    color: 'white',\n    marginRight: 8\n  },\n  plusIcon: {\n    width: 20,\n    height: 20,\n    tintColor: 'white'\n  }\n});\nvar cardStyles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8,\n    margin: 8,\n    elevation: 2\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  icon: {\n    width: 24,\n    height: 24\n  },\n  imageContainer: {\n    height: hp('20%'),\n    marginBottom: hp('12%')\n  },\n  swiper: {\n    height: hp('100%')\n  },\n  image: {\n    height: '100%',\n    width: wp('100%'),\n    borderRadius: 8\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8\n  }\n});\nexport default BrowseScreen;","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","ScrollView","Image","TouchableOpacity","EventCard","useAppContext","eventApi","PlusIcon","useNavigation","widthPercentageToDP","wp","heightPercentageToDP","hp","jsx","_jsx","jsxs","_jsxs","BrowseScreen","navigation","_useAppContext","user","setMyRsvps","setMyEvents","browseEvents","setBrowseEvents","fetchEvents","_ref","_asyncToGenerator","eventData","getEvents","error","console","apply","arguments","style","styles","container","children","buttonContainer","onPress","navigate","buttonText","source","plusIcon","scroll","map","event","userId","_id","cardStyles","create","flex","justifyContent","alignItems","width","maxWidth","flexDirection","borderWidth","borderRadius","padding","backgroundColor","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","color","marginRight","tintColor","card","title","fontSize","fontWeight","marginBottom","row","icon","imageContainer","swiper","image","modalContent","modalButtons","marginTop"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/BrowseScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, Image, TouchableOpacity } from 'react-native';\r\nimport EventCard from './EventCard';\r\nimport { useAppContext } from './AppContext';\r\nimport eventApi from '../api/eventApi';\r\nimport PlusIcon from '../assets/plus.png';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nconst BrowseScreen = () => {\r\n    const navigation = useNavigation();\r\n\r\n    const {\r\n        user,\r\n        setMyRsvps,\r\n        setMyEvents,\r\n        browseEvents,\r\n        setBrowseEvents,\r\n    } = useAppContext(); // Use the context hook\r\n\r\n    useEffect(() => {\r\n        const fetchEvents = async () => {\r\n            try {\r\n                const eventData = await eventApi.getEvents();\r\n                setBrowseEvents(eventData);\r\n            } catch (error) {\r\n                console.error('Error fetching events:', error);\r\n            }\r\n        };\r\n        fetchEvents();\r\n    }, [setBrowseEvents]);\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TouchableOpacity\r\n                style={styles.buttonContainer}\r\n                onPress={() => {\r\n                    navigation.navigate('Create Event')\r\n                }}\r\n            >\r\n                <Text style={styles.buttonText}>Create Event</Text>\r\n                <Image source={PlusIcon} style={styles.plusIcon} />\r\n            </TouchableOpacity>\r\n            <ScrollView style={styles.scroll}>\r\n                {browseEvents ? (\r\n                    browseEvents.map((event) => (\r\n                        <EventCard\r\n                            key={event._id}\r\n                            event={event}\r\n                            userId={user._id}\r\n                            setMyRsvps={setMyRsvps}\r\n                            setMyEvents={setMyEvents}\r\n                            setBrowseEvents={setBrowseEvents}\r\n                            cardStyles={cardStyles}\r\n                        />\r\n                    ))\r\n                ) : (\r\n                    <Text>Issue Retrieving Events from the database</Text>\r\n                )}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    scroll: {\r\n        width: wp('90%'),\r\n        maxWidth: 1000,\r\n    },\r\n    buttonContainer: {\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderWidth: 1,\r\n        borderRadius: 12,\r\n        padding: 8,\r\n        backgroundColor: 'black',\r\n        margin: 10,\r\n        shadowColor: 'black',\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.8,\r\n        shadowRadius: 4,\r\n        elevation: 5, // For Android\r\n    },\r\n    buttonText: {\r\n        color: 'white',\r\n        marginRight: 8,\r\n    },\r\n    plusIcon: {\r\n        width: 20,\r\n        height: 20,\r\n        tintColor: 'white',\r\n    },\r\n});\r\n\r\nconst cardStyles = StyleSheet.create({\r\n    card: {\r\n      backgroundColor: 'white',\r\n      padding: 16,\r\n      borderRadius: 8,\r\n      margin: 8,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 8,\r\n    },\r\n    icon: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    imageContainer: {\r\n      height: hp('20%'), // Adjust the height as needed\r\n      marginBottom: hp('12%'), // Add margin as needed\r\n    },\r\n    swiper: {\r\n      height: hp('100%'), // Take the full height of the container\r\n    },\r\n    image: {\r\n      height: '100%', // Take the full height of the Swiper\r\n      width: wp('100%'), // Take the full width of the Swiper\r\n      borderRadius: 8, // Adjust the border radius as needed\r\n    },\r\n    modalContent: {\r\n      backgroundColor: 'white',\r\n      padding: 16,\r\n      borderRadius: 8,\r\n    },\r\n    modalButtons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      marginTop: 8,\r\n    },\r\n  })\r\n\r\nexport default BrowseScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}