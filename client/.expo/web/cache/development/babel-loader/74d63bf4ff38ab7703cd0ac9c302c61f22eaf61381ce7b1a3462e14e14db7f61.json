{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Swiper from 'react-native-web-swiper';\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EventPictures = function EventPictures(_ref) {\n  var pictures = _ref.pictures;\n  if (!pictures || pictures.length === 0) {\n    return null;\n  }\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    modalVisible = _useState2[0],\n    setModalVisible = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedImage = _useState4[0],\n    setSelectedImage = _useState4[1];\n  var _useState5 = useState(0),\n    _useState6 = _slicedToArray(_useState5, 2),\n    activeIndex = _useState6[0],\n    setActiveIndex = _useState6[1];\n  var handleImagePress = function handleImagePress(index) {\n    setSelectedImage(pictures[index]);\n    setModalVisible(true);\n    setActiveIndex(index);\n  };\n  var closeModal = function closeModal() {\n    setModalVisible(false);\n    setSelectedImage(null);\n  };\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: {\n        height: hp('30%')\n      },\n      children: _jsx(Swiper, {\n        style: styles.swiper,\n        loop: false,\n        index: activeIndex,\n        onIndexChanged: function onIndexChanged(index) {\n          return setActiveIndex(index);\n        },\n        children: pictures.map(function (image, index) {\n          return _jsxs(TouchableOpacity, {\n            onPress: function onPress() {\n              return handleImagePress(index);\n            },\n            children: [_jsx(Text, {\n              style: {\n                backgroundColor: 'rgba(255, 255, 255, 0.5)'\n              },\n              children: \"Picture here\"\n            }), _jsx(Image, {\n              source: {\n                uri: image\n              },\n              style: styles.image,\n              resizeMode: \"cover\"\n            })]\n          }, index);\n        })\n      })\n    }), _jsx(View, {\n      style: styles.imageTracker,\n      children: _jsx(Text, {\n        style: styles.imageTrackerText,\n        children: `${activeIndex + 1}/${pictures.length}`\n      })\n    }), _jsx(Modal, {\n      visible: modalVisible,\n      transparent: true,\n      onRequestClose: closeModal,\n      children: _jsxs(View, {\n        style: styles.modalContainer,\n        children: [_jsx(TouchableOpacity, {\n          style: styles.closeButton,\n          onPress: closeModal,\n          children: _jsx(Text, {\n            style: styles.closeButtonText,\n            children: \"Close\"\n          })\n        }), _jsx(Image, {\n          style: styles.modalImage,\n          source: {\n            uri: selectedImage\n          },\n          resizeMode: \"contain\"\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  swiper: {\n    height: hp('30%')\n  },\n  image: {\n    height: hp('30%'),\n    width: wp('100%'),\n    borderRadius: 10\n  },\n  imageTracker: {\n    position: 'absolute',\n    top: hp('2%'),\n    alignSelf: 'center'\n  },\n  imageTrackerText: {\n    color: 'white',\n    fontSize: wp('4%')\n  },\n  modalContainer: {\n    flex: 1,\n    backgroundColor: 'black',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  closeButton: {\n    position: 'absolute',\n    top: hp('5%'),\n    right: wp('2%'),\n    zIndex: 1\n  },\n  closeButtonText: {\n    color: 'white',\n    fontSize: wp('4%')\n  },\n  modalImage: {\n    width: wp('100%'),\n    height: hp('80%')\n  }\n});\nexport default EventPictures;","map":{"version":3,"names":["React","useState","View","Image","StyleSheet","TouchableOpacity","Modal","Text","Swiper","heightPercentageToDP","hp","widthPercentageToDP","wp","jsx","_jsx","jsxs","_jsxs","EventPictures","_ref","pictures","length","_useState","_useState2","_slicedToArray","modalVisible","setModalVisible","_useState3","_useState4","selectedImage","setSelectedImage","_useState5","_useState6","activeIndex","setActiveIndex","handleImagePress","index","closeModal","children","style","height","styles","swiper","loop","onIndexChanged","map","image","onPress","backgroundColor","source","uri","resizeMode","imageTracker","imageTrackerText","visible","transparent","onRequestClose","modalContainer","closeButton","closeButtonText","modalImage","create","width","borderRadius","position","top","alignSelf","color","fontSize","flex","justifyContent","alignItems","right","zIndex"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/EventPictures.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Image, StyleSheet, TouchableOpacity, Modal, Text } from 'react-native';\r\nimport Swiper from 'react-native-web-swiper';\r\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\n\r\nconst EventPictures = ({ pictures }) => {\r\n  if (!pictures || pictures.length === 0) {\r\n    return null; // Render nothing if there are no pictures\r\n  }\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n  const handleImagePress = (index) => {\r\n    setSelectedImage(pictures[index]);\r\n    setModalVisible(true);\r\n    setActiveIndex(index);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalVisible(false);\r\n    setSelectedImage(null);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <View style={{ height: hp('30%') }}>\r\n        <Swiper\r\n          style={styles.swiper}\r\n          loop={false}\r\n          index={activeIndex}\r\n          onIndexChanged={(index) => setActiveIndex(index)}\r\n        >\r\n          {pictures.map((image, index) => (\r\n            <TouchableOpacity key={index} onPress={() => handleImagePress(index)}>\r\n              <Text style={{ backgroundColor: 'rgba(255, 255, 255, 0.5)' }}>Picture here</Text>\r\n              <Image source={{ uri: image }} style={styles.image} resizeMode=\"cover\" />\r\n            </TouchableOpacity>\r\n          ))}\r\n        </Swiper>\r\n      </View>\r\n      {/* Display current image number tracker */}\r\n      <View style={styles.imageTracker}>\r\n        <Text style={styles.imageTrackerText}>{`${activeIndex + 1}/${pictures.length}`}</Text>\r\n      </View>\r\n\r\n      {/* Modal for displaying selected image */}\r\n      <Modal visible={modalVisible} transparent={true} onRequestClose={closeModal}>\r\n        <View style={styles.modalContainer}>\r\n          <TouchableOpacity style={styles.closeButton} onPress={closeModal}>\r\n            <Text style={styles.closeButtonText}>Close</Text>\r\n          </TouchableOpacity>\r\n          <Image style={styles.modalImage} source={{ uri: selectedImage }} resizeMode=\"contain\" />\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  swiper: {\r\n    height: hp('30%'), // Adjust the height as needed\r\n  },\r\n  image: {\r\n    height: hp('30%'), // Adjust the height to match the Swiper height\r\n    width: wp('100%'), // Adjust the width to take the full width of the Swiper\r\n    borderRadius: 10,\r\n  },\r\n  imageTracker: {\r\n    position: 'absolute',\r\n    top: hp('2%'),\r\n    alignSelf: 'center',\r\n  },\r\n  imageTrackerText: {\r\n    color: 'white',\r\n    fontSize: wp('4%'),\r\n  },\r\n  modalContainer: {\r\n    flex: 1,\r\n    backgroundColor: 'black',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    top: hp('5%'), // Adjusted the top position\r\n    right: wp('2%'),\r\n    zIndex: 1,\r\n  },\r\n  closeButtonText: {\r\n    color: 'white',\r\n    fontSize: wp('4%'),\r\n  },\r\n  modalImage: {\r\n    width: wp('100%'),\r\n    height: hp('80%'),\r\n  },\r\n});\r\n\r\nexport default EventPictures;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}