{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ProfileBanner from \"./ProfileBanner\";\nimport EventList from \"./EventList\";\nimport { useAppContext } from \"./AppContext\";\nimport userApi from \"../api/userApi\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    setLoggedIn = _useAppContext.setLoggedIn,\n    myEvents = _useAppContext.myEvents,\n    setMyEvents = _useAppContext.setMyEvents,\n    myRsvps = _useAppContext.myRsvps,\n    setMyRsvps = _useAppContext.setMyRsvps,\n    myInterested = _useAppContext.myInterested,\n    setMyInterested = _useAppContext.setMyInterested;\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var eventsData = yield userApi.getMyEvents(user._id);\n          setMyEvents(eventsData || []);\n          var rsvpData = yield userApi.getMyRsvps(user._id);\n          setMyRsvps(rsvpData || []);\n          var interestedData = yield userApi.getMyInterested(user._id);\n          setMyInterested(interestedData);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [user._id, setMyEvents, setMyRsvps]);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(ProfileBanner, {\n      user: user,\n      setLoggedIn: setLoggedIn\n    }), _jsxs(View, {\n      style: styles.eventsContainer,\n      children: [_jsx(EventList, {\n        events: myEvents,\n        cardStyles: cardStyles,\n        title: \"Hosting\"\n      }), _jsx(EventList, {\n        events: myRsvps,\n        cardStyles: cardStyles,\n        title: \"Attending\"\n      }), _jsx(EventList, {\n        events: myInterested,\n        cardStyles: cardStyles,\n        title: \"Interested\"\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    marginBottom: hp('1%')\n  },\n  eventsContainer: {\n    width: wp('90%'),\n    marginLeft: wp('5%'),\n    marginRight: wp('5%')\n  }\n});\nvar cardStyles = StyleSheet.create({\n  card: {\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8,\n    margin: 8,\n    elevation: 2\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginBottom: 8\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  swiper: {\n    height: hp('100%')\n  },\n  image: {\n    height: '100%',\n    width: wp('100%'),\n    borderRadius: 8\n  },\n  modalContent: {\n    backgroundColor: 'white',\n    padding: 16,\n    borderRadius: 8\n  },\n  modalButtons: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 8\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","View","StyleSheet","ScrollView","ProfileBanner","EventList","useAppContext","userApi","heightPercentageToDP","hp","widthPercentageToDP","wp","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useAppContext","user","setLoggedIn","myEvents","setMyEvents","myRsvps","setMyRsvps","myInterested","setMyInterested","fetchData","_ref","_asyncToGenerator","eventsData","getMyEvents","_id","rsvpData","getMyRsvps","interestedData","getMyInterested","error","console","apply","arguments","style","styles","container","children","eventsContainer","events","cardStyles","title","create","flex","marginBottom","width","marginLeft","marginRight","card","backgroundColor","padding","borderRadius","margin","elevation","fontSize","fontWeight","row","flexDirection","justifyContent","alignItems","swiper","height","image","modalContent","modalButtons","marginTop"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ProfileScreen.js"],"sourcesContent":["// ProfileScreen.js\r\nimport React, { useEffect } from 'react';\r\nimport { View, StyleSheet, ScrollView } from 'react-native';\r\nimport ProfileBanner from './ProfileBanner';\r\nimport EventList from './EventList';\r\nimport { useAppContext } from './AppContext';\r\nimport userApi from '../api/userApi';\r\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\n\r\nconst ProfileScreen = () => {\r\n  const {\r\n    user,\r\n    setLoggedIn,\r\n    myEvents,\r\n    setMyEvents,\r\n    myRsvps,\r\n    setMyRsvps,\r\n    myInterested,\r\n    setMyInterested,\r\n  } = useAppContext();\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const eventsData = await userApi.getMyEvents(user._id);\r\n        setMyEvents(eventsData || []);\r\n        const rsvpData = await userApi.getMyRsvps(user._id);\r\n        setMyRsvps(rsvpData || []);\r\n        const interestedData = await userApi.getMyInterested(user._id);\r\n        setMyInterested(interestedData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user._id, setMyEvents, setMyRsvps]);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <ProfileBanner user={user} setLoggedIn={setLoggedIn} />\r\n      <View style={styles.eventsContainer}>\r\n        <EventList events={myEvents} cardStyles={cardStyles} title=\"Hosting\" />\r\n        <EventList events={myRsvps} cardStyles={cardStyles} title=\"Attending\" />\r\n        <EventList events={myInterested} cardStyles={cardStyles} title=\"Interested\" />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    marginBottom: hp('1%'),\r\n  },\r\n  eventsContainer: {\r\n    width: wp('90%'),\r\n    marginLeft: wp('5%'),\r\n    marginRight: wp('5%'),\r\n  },\r\n});\r\n\r\nconst cardStyles = StyleSheet.create({\r\n  card: {\r\n    backgroundColor: 'white',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n    margin: 8,\r\n    elevation: 2,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    marginBottom: 8,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  swiper: {\r\n    height: hp('100%'),\r\n  },\r\n  image: {\r\n    height: '100%',\r\n    width: wp('100%'),\r\n    borderRadius: 8,\r\n  },\r\n  modalContent: {\r\n    backgroundColor: 'white',\r\n    padding: 16,\r\n    borderRadius: 8,\r\n  },\r\n  modalButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: 8,\r\n  },\r\n})\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}