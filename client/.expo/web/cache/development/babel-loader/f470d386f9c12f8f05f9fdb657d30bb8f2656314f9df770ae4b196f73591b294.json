{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport EventCard from \"./EventCard\";\nimport { useAppContext } from \"./AppContext\";\nimport eventApi from \"../api/eventApi\";\nimport PlusIcon from \"../assets/plus.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport CustomSearchBar from \"./CustomSearchBar\";\nimport Filters from \"./Filters\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BrowseScreen = function BrowseScreen() {\n  var navigation = useNavigation();\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    browseEvents = _useAppContext.browseEvents,\n    setBrowseEvents = _useAppContext.setBrowseEvents;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    search = _useState2[0],\n    setSearch = _useState2[1];\n  useEffect(function () {\n    var fetchEvents = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var eventData = yield eventApi.getEvents();\n          var filteredEvents = eventData.filter(function (event) {\n            return event.status !== 'cancelled';\n          });\n          var searchedEvents = filteredEvents.filter(function (event) {\n            return event.eventName.toLowerCase().includes(search.toLowerCase());\n          });\n          setBrowseEvents(searchedEvents);\n        } catch (error) {\n          console.error('Error fetching events:', error);\n        }\n      });\n      return function fetchEvents() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchEvents();\n  }, [search, setBrowseEvents]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.filterContainer,\n      children: [_jsx(CustomSearchBar, {\n        search: search,\n        updateSearch: setSearch\n      }), _jsx(Filters, {})]\n    }), _jsxs(TouchableOpacity, {\n      style: styles.buttonContainer,\n      onPress: function onPress() {\n        navigation.navigate('Create Event');\n      },\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"Create Event\"\n      }), _jsx(Image, {\n        source: PlusIcon,\n        style: styles.plusIcon\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.scroll,\n      children: browseEvents ? browseEvents.map(function (event) {\n        return _jsx(EventCard, {\n          event: event\n        }, event._id);\n      }) : _jsx(Text, {\n        children: \"Issue Retrieving Events from the database\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scroll: {\n    width: wp('95%'),\n    maxWidth: 1000\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 12,\n    padding: 8,\n    backgroundColor: 'black',\n    margin: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonText: {\n    color: 'white',\n    marginRight: 8\n  },\n  plusIcon: {\n    width: 20,\n    height: 20,\n    tintColor: 'white'\n  },\n  filterContainer: {\n    width: wp('100%'),\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\nexport default BrowseScreen;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","ScrollView","Image","TouchableOpacity","EventCard","useAppContext","eventApi","PlusIcon","useNavigation","widthPercentageToDP","wp","heightPercentageToDP","hp","CustomSearchBar","Filters","jsx","_jsx","jsxs","_jsxs","BrowseScreen","navigation","_useAppContext","user","browseEvents","setBrowseEvents","_useState","_useState2","_slicedToArray","search","setSearch","fetchEvents","_ref","_asyncToGenerator","eventData","getEvents","filteredEvents","filter","event","status","searchedEvents","eventName","toLowerCase","includes","error","console","apply","arguments","style","styles","container","children","filterContainer","updateSearch","buttonContainer","onPress","navigate","buttonText","source","plusIcon","scroll","map","_id","create","flex","justifyContent","alignItems","width","maxWidth","flexDirection","borderWidth","borderRadius","padding","backgroundColor","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","color","marginRight","tintColor"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/BrowseScreen.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, Image, TouchableOpacity } from 'react-native';\r\nimport EventCard from './EventCard';\r\nimport { useAppContext } from './AppContext';\r\nimport eventApi from '../api/eventApi';\r\nimport PlusIcon from '../assets/plus.png';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nimport CustomSearchBar from './CustomSearchBar';\r\nimport Filters from './Filters';\r\n\r\nconst BrowseScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const {\r\n    user,\r\n    browseEvents,\r\n    setBrowseEvents,\r\n  } = useAppContext(); // Use the context hook\r\n\r\n  const [search, setSearch] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const eventData = await eventApi.getEvents();\r\n        // Filter out events with status 'cancelled'\r\n        const filteredEvents = eventData.filter(event => event.status !== 'cancelled');\r\n\r\n        // Apply search filter\r\n        const searchedEvents = filteredEvents.filter(event =>\r\n          event.eventName.toLowerCase().includes(search.toLowerCase())\r\n        );\r\n\r\n        setBrowseEvents(searchedEvents);\r\n      } catch (error) {\r\n        console.error('Error fetching events:', error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, [search, setBrowseEvents]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.filterContainer}>\r\n        <CustomSearchBar search={search} updateSearch={setSearch} />\r\n        <Filters />\r\n      </View>\r\n      <TouchableOpacity\r\n        style={styles.buttonContainer}\r\n        onPress={() => {\r\n          navigation.navigate('Create Event');\r\n        }}\r\n      >\r\n        <Text style={styles.buttonText}>Create Event</Text>\r\n        <Image source={PlusIcon} style={styles.plusIcon} />\r\n      </TouchableOpacity>\r\n      <ScrollView style={styles.scroll}>\r\n        {browseEvents ? (\r\n          browseEvents.map((event) => (\r\n            <EventCard key={event._id} event={event} />\r\n          ))\r\n        ) : (\r\n          <Text>Issue Retrieving Events from the database</Text>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  scroll: {\r\n    width: wp('95%'),\r\n    maxWidth: 1000,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderRadius: 12,\r\n    padding: 8,\r\n    backgroundColor: 'black',\r\n    margin: 10,\r\n    shadowColor: 'black',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.8,\r\n    shadowRadius: 4,\r\n    elevation: 5, // For Android\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    marginRight: 8,\r\n  },\r\n  plusIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    tintColor: 'white',\r\n  },\r\n  filterContainer: {\r\n    width: wp('100%'), // Ensure the filter container takes the entire width\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n});\r\n\r\nexport default BrowseScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}