{"ast":null,"code":"import { getContext } from \"../utils/getContext.web\";\nfunction resampleSingle(canvas, width, height) {\n  var resizeCanvas = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n  var widthSource = canvas.width;\n  var heightSource = canvas.height;\n  width = Math.round(width);\n  height = Math.round(height);\n  var wRatio = widthSource / width;\n  var hRatio = heightSource / height;\n  var wRatioHalf = Math.ceil(wRatio / 2);\n  var hRatioHalf = Math.ceil(hRatio / 2);\n  var ctx = getContext(canvas);\n  var img = ctx.getImageData(0, 0, widthSource, heightSource);\n  var img2 = ctx.createImageData(width, height);\n  var data = img.data;\n  var data2 = img2.data;\n  for (var j = 0; j < height; j++) {\n    for (var i = 0; i < width; i++) {\n      var x2 = (i + j * width) * 4;\n      var weight = 0;\n      var weights = 0;\n      var weightsAlpha = 0;\n      var gx_r = 0;\n      var gx_g = 0;\n      var gx_b = 0;\n      var gx_a = 0;\n      var yCenter = (j + 0.5) * hRatio;\n      var yy_start = Math.floor(j * hRatio);\n      var yy_stop = Math.ceil((j + 1) * hRatio);\n      for (var yy = yy_start; yy < yy_stop; yy++) {\n        var dy = Math.abs(yCenter - (yy + 0.5)) / hRatioHalf;\n        var center_x = (i + 0.5) * wRatio;\n        var w0 = dy * dy;\n        var xx_start = Math.floor(i * wRatio);\n        var xx_stop = Math.ceil((i + 1) * wRatio);\n        for (var xx = xx_start; xx < xx_stop; xx++) {\n          var dx = Math.abs(center_x - (xx + 0.5)) / wRatioHalf;\n          var w = Math.sqrt(w0 + dx * dx);\n          if (w >= 1) {\n            continue;\n          }\n          weight = 2 * w * w * w - 3 * w * w + 1;\n          var xPosition = 4 * (xx + yy * widthSource);\n          gx_a += weight * data[xPosition + 3];\n          weightsAlpha += weight;\n          if (data[xPosition + 3] < 255) {\n            weight = weight * data[xPosition + 3] / 250;\n          }\n          gx_r += weight * data[xPosition];\n          gx_g += weight * data[xPosition + 1];\n          gx_b += weight * data[xPosition + 2];\n          weights += weight;\n        }\n      }\n      data2[x2] = gx_r / weights;\n      data2[x2 + 1] = gx_g / weights;\n      data2[x2 + 2] = gx_b / weights;\n      data2[x2 + 3] = gx_a / weightsAlpha;\n    }\n  }\n  if (resizeCanvas) {\n    result.width = width;\n    result.height = height;\n  }\n  var context = getContext(result);\n  context.putImageData(img2, 0, 0);\n  return result;\n}\nexport default (function (canvas, _ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  var imageRatio = canvas.width / canvas.height;\n  var requestedWidth = 0;\n  var requestedHeight = 0;\n  if (width !== undefined) {\n    requestedWidth = width;\n    requestedHeight = requestedWidth / imageRatio;\n  }\n  if (height !== undefined) {\n    requestedHeight = height;\n    if (requestedWidth === 0) {\n      requestedWidth = requestedHeight * imageRatio;\n    }\n  }\n  return resampleSingle(canvas, requestedWidth, requestedHeight, true);\n});","map":{"version":3,"names":["getContext","resampleSingle","canvas","width","height","resizeCanvas","arguments","length","undefined","result","document","createElement","widthSource","heightSource","Math","round","wRatio","hRatio","wRatioHalf","ceil","hRatioHalf","ctx","img","getImageData","img2","createImageData","data","data2","j","i","x2","weight","weights","weightsAlpha","gx_r","gx_g","gx_b","gx_a","yCenter","yy_start","floor","yy_stop","yy","dy","abs","center_x","w0","xx_start","xx_stop","xx","dx","w","sqrt","xPosition","context","putImageData","_ref","imageRatio","requestedWidth","requestedHeight"],"sources":["C:\\Users\\dyarb\\batcave\\Meetup_2.0\\client\\node_modules\\expo-image-manipulator\\src\\actions\\ResizeAction.web.ts"],"sourcesContent":["import { ActionResize } from '../ImageManipulator.types';\nimport { getContext } from '../utils/getContext.web';\n\n/**\n * Hermite resize - fast image resize/resample using Hermite filter. 1 cpu version!\n * https://stackoverflow.com/a/18320662/4047926\n *\n * @param {HTMLCanvasElement} canvas\n * @param {int} width\n * @param {int} height\n * @param {boolean} resizeCanvas if true, canvas will be resized. Optional.\n */\nfunction resampleSingle(\n  canvas: HTMLCanvasElement,\n  width: number,\n  height: number,\n  resizeCanvas: boolean = false\n): HTMLCanvasElement {\n  const result = document.createElement('canvas');\n  result.width = canvas.width;\n  result.height = canvas.height;\n\n  const widthSource = canvas.width;\n  const heightSource = canvas.height;\n  width = Math.round(width);\n  height = Math.round(height);\n\n  const wRatio = widthSource / width;\n  const hRatio = heightSource / height;\n  const wRatioHalf = Math.ceil(wRatio / 2);\n  const hRatioHalf = Math.ceil(hRatio / 2);\n\n  const ctx = getContext(canvas);\n\n  const img = ctx.getImageData(0, 0, widthSource, heightSource);\n  const img2 = ctx.createImageData(width, height);\n  const data = img.data;\n  const data2 = img2.data;\n\n  for (let j = 0; j < height; j++) {\n    for (let i = 0; i < width; i++) {\n      const x2 = (i + j * width) * 4;\n      let weight = 0;\n      let weights = 0;\n      let weightsAlpha = 0;\n      let gx_r = 0;\n      let gx_g = 0;\n      let gx_b = 0;\n      let gx_a = 0;\n      const yCenter = (j + 0.5) * hRatio;\n      const yy_start = Math.floor(j * hRatio);\n      const yy_stop = Math.ceil((j + 1) * hRatio);\n      for (let yy = yy_start; yy < yy_stop; yy++) {\n        const dy = Math.abs(yCenter - (yy + 0.5)) / hRatioHalf;\n        const center_x = (i + 0.5) * wRatio;\n        const w0 = dy * dy; //pre-calc part of w\n        const xx_start = Math.floor(i * wRatio);\n        const xx_stop = Math.ceil((i + 1) * wRatio);\n        for (let xx = xx_start; xx < xx_stop; xx++) {\n          const dx = Math.abs(center_x - (xx + 0.5)) / wRatioHalf;\n          const w = Math.sqrt(w0 + dx * dx);\n          if (w >= 1) {\n            //pixel too far\n            continue;\n          }\n          //hermite filter\n          weight = 2 * w * w * w - 3 * w * w + 1;\n          const xPosition = 4 * (xx + yy * widthSource);\n          //alpha\n          gx_a += weight * data[xPosition + 3];\n          weightsAlpha += weight;\n          //colors\n          if (data[xPosition + 3] < 255) {\n            weight = (weight * data[xPosition + 3]) / 250;\n          }\n          gx_r += weight * data[xPosition];\n          gx_g += weight * data[xPosition + 1];\n          gx_b += weight * data[xPosition + 2];\n          weights += weight;\n        }\n      }\n      data2[x2] = gx_r / weights;\n      data2[x2 + 1] = gx_g / weights;\n      data2[x2 + 2] = gx_b / weights;\n      data2[x2 + 3] = gx_a / weightsAlpha;\n    }\n  }\n\n  //resize canvas\n  if (resizeCanvas) {\n    result.width = width;\n    result.height = height;\n  }\n\n  //draw\n  const context = getContext(result);\n  context.putImageData(img2, 0, 0);\n\n  return result;\n}\n\nexport default (canvas: HTMLCanvasElement, { width, height }: ActionResize['resize']) => {\n  const imageRatio = canvas.width / canvas.height;\n\n  let requestedWidth: number = 0;\n  let requestedHeight: number = 0;\n  if (width !== undefined) {\n    requestedWidth = width;\n    requestedHeight = requestedWidth / imageRatio;\n  }\n  if (height !== undefined) {\n    requestedHeight = height;\n    if (requestedWidth === 0) {\n      requestedWidth = requestedHeight * imageRatio;\n    }\n  }\n\n  return resampleSingle(canvas, requestedWidth, requestedHeight, true);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}