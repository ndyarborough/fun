{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport ProfileBanner from \"./ProfileBanner\";\nimport EventCard from \"./EventCard\";\nimport { useAppContext } from \"./AppContext\";\nimport userApi from \"../api/userApi\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ProfileScreen = function ProfileScreen() {\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    setLoggedIn = _useAppContext.setLoggedIn,\n    myEvents = _useAppContext.myEvents,\n    setMyEvents = _useAppContext.setMyEvents,\n    myRsvps = _useAppContext.myRsvps,\n    setMyRsvps = _useAppContext.setMyRsvps,\n    setBrowseEvents = _useAppContext.setBrowseEvents,\n    myInterested = _useAppContext.myInterested,\n    setMyInterested = _useAppContext.setMyInterested;\n  var cardStyles = {\n    card: {\n      backgroundColor: 'white',\n      padding: 16,\n      borderRadius: 8,\n      margin: 8,\n      elevation: 2\n    },\n    title: {\n      fontSize: 18,\n      fontWeight: 'bold',\n      marginBottom: 8\n    },\n    row: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n      marginBottom: 8\n    },\n    icon: {\n      width: 24,\n      height: 24\n    },\n    imageContainer: {\n      height: hp('20%'),\n      marginBottom: hp('12%')\n    },\n    swiper: {\n      height: hp('100%')\n    },\n    image: {\n      height: '100%',\n      width: wp('100%'),\n      borderRadius: 8\n    },\n    modalContent: {\n      backgroundColor: 'white',\n      padding: 16,\n      borderRadius: 8\n    },\n    modalButtons: {\n      flexDirection: 'row',\n      justifyContent: 'space-between',\n      marginTop: 8\n    }\n  };\n  useEffect(function () {\n    var fetchData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var eventsData = yield userApi.getMyEvents(user._id);\n          setMyEvents(eventsData || []);\n          var rsvpData = yield userApi.getMyRsvps(user._id);\n          setMyRsvps(rsvpData || []);\n          var interestedData = yield userApi.getMyInterested(user._id);\n          setMyInterested(interestedData);\n          console.log(interestedData);\n        } catch (error) {\n          console.error('Error fetching data:', error);\n        }\n      });\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchData();\n  }, [user._id, setMyEvents, setMyRsvps]);\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(ProfileBanner, {\n      user: user,\n      setLoggedIn: setLoggedIn\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Hosting\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.scrollView,\n        children: myEvents && myEvents.map(function (event) {\n          return _jsx(EventCard, {\n            cardStyles: cardStyles,\n            event: event,\n            userId: user && user._id,\n            setMyEvents: setMyEvents,\n            setMyRsvps: setMyRsvps,\n            setBrowseEvents: setBrowseEvents\n          }, event._id);\n        })\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Attending\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.scrollView,\n        children: myRsvps && myRsvps.map(function (event) {\n          return _jsx(EventCard, {\n            cardStyles: cardStyles,\n            event: event,\n            userId: user && user._id,\n            setMyEvents: setMyEvents,\n            setMyRsvps: setMyRsvps,\n            setBrowseEvents: setBrowseEvents\n          }, event._id);\n        })\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \"Interested\"\n      }), _jsx(ScrollView, {\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        style: styles.scrollView,\n        children: myInterested && myInterested.map(function (event) {\n          return _jsx(EventCard, {\n            cardStyles: cardStyles,\n            event: event,\n            userId: user && user._id,\n            setMyEvents: setMyEvents,\n            setMyRsvps: setMyRsvps,\n            setBrowseEvents: setBrowseEvents\n          }, event._id);\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 10,\n    paddingRight: 10,\n    paddingBottom: 10\n  },\n  label: {\n    alignSelf: 'flex-start',\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginBottom: 10,\n    color: 'black'\n  },\n  scrollView: {\n    width: '100%'\n  }\n});\nexport default ProfileScreen;","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","ScrollView","ProfileBanner","EventCard","useAppContext","userApi","heightPercentageToDP","hp","widthPercentageToDP","wp","jsx","_jsx","jsxs","_jsxs","ProfileScreen","_useAppContext","user","setLoggedIn","myEvents","setMyEvents","myRsvps","setMyRsvps","setBrowseEvents","myInterested","setMyInterested","cardStyles","card","backgroundColor","padding","borderRadius","margin","elevation","title","fontSize","fontWeight","marginBottom","row","flexDirection","justifyContent","alignItems","icon","width","height","imageContainer","swiper","image","modalContent","modalButtons","marginTop","fetchData","_ref","_asyncToGenerator","eventsData","getMyEvents","_id","rsvpData","getMyRsvps","interestedData","getMyInterested","console","log","error","apply","arguments","style","styles","container","children","label","horizontal","showsHorizontalScrollIndicator","scrollView","map","event","userId","create","flex","paddingLeft","paddingRight","paddingBottom","alignSelf","color"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/ProfileScreen.js"],"sourcesContent":["// ProfileScreen.js\r\nimport React, { useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport ProfileBanner from './ProfileBanner';\r\nimport EventCard from './EventCard';\r\nimport { useAppContext } from './AppContext'; // Import the useAppContext hook\r\nimport userApi from '../api/userApi';\r\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from 'react-native-responsive-screen';\r\n\r\nconst ProfileScreen = () => {\r\n  // Use the useAppContext hook to access the shared state\r\n  const {\r\n    user,\r\n    setLoggedIn,\r\n    myEvents,\r\n    setMyEvents,\r\n    myRsvps,\r\n    setMyRsvps,\r\n    setBrowseEvents,\r\n    myInterested,\r\n    setMyInterested,\r\n  } = useAppContext();\r\n\r\n  const cardStyles = {\r\n    card: {\r\n      backgroundColor: 'white',\r\n      padding: 16,\r\n      borderRadius: 8,\r\n      margin: 8,\r\n      elevation: 2,\r\n    },\r\n    title: {\r\n      fontSize: 18,\r\n      fontWeight: 'bold',\r\n      marginBottom: 8,\r\n    },\r\n    row: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      alignItems: 'center',\r\n      marginBottom: 8,\r\n    },\r\n    icon: {\r\n      width: 24,\r\n      height: 24,\r\n    },\r\n    imageContainer: {\r\n      height: hp('20%'), // Adjust the height as needed\r\n      marginBottom: hp('12%'), // Add margin as needed\r\n    },\r\n    swiper: {\r\n      height: hp('100%'), // Take the full height of the container\r\n    },\r\n    image: {\r\n      height: '100%', // Take the full height of the Swiper\r\n      width: wp('100%'), // Take the full width of the Swiper\r\n      borderRadius: 8, // Adjust the border radius as needed\r\n    },\r\n    modalContent: {\r\n      backgroundColor: 'white',\r\n      padding: 16,\r\n      borderRadius: 8,\r\n    },\r\n    modalButtons: {\r\n      flexDirection: 'row',\r\n      justifyContent: 'space-between',\r\n      marginTop: 8,\r\n    },\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Use the user from context\r\n        const eventsData = await userApi.getMyEvents(user._id);\r\n        setMyEvents(eventsData || []); // Ensure eventsData is an array or default to an empty array\r\n        const rsvpData = await userApi.getMyRsvps(user._id);\r\n        setMyRsvps(rsvpData || []); // Ensure rsvpData is an array or default to an empty array\r\n        const interestedData = await userApi.getMyInterested(user._id);\r\n        setMyInterested(interestedData)\r\n        console.log(interestedData)\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        // Handle the error as needed, e.g., show an error message to the user\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [user._id, setMyEvents, setMyRsvps]);\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <ProfileBanner user={user} setLoggedIn={setLoggedIn} />\r\n\r\n      <View>\r\n        <Text style={styles.label}>Hosting</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scrollView}>\r\n          {myEvents &&\r\n            myEvents.map((event) => (\r\n              <EventCard cardStyles={cardStyles} key={event._id} event={event} userId={user && user._id} setMyEvents={setMyEvents} setMyRsvps={setMyRsvps} setBrowseEvents={setBrowseEvents} />\r\n            ))}\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View>\r\n        <Text style={styles.label}>Attending</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scrollView}>\r\n            {myRsvps &&\r\n              myRsvps.map((event) => (\r\n                <EventCard cardStyles={cardStyles} key={event._id} event={event} userId={user && user._id} setMyEvents={setMyEvents} setMyRsvps={setMyRsvps} setBrowseEvents={setBrowseEvents} />\r\n              ))}\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <View>\r\n        <Text style={styles.label}>Interested</Text>\r\n        <ScrollView horizontal showsHorizontalScrollIndicator={false} style={styles.scrollView}>\r\n            {myInterested &&\r\n              myInterested.map((event) => (\r\n                <EventCard cardStyles={cardStyles} key={event._id} event={event} userId={user && user._id} setMyEvents={setMyEvents} setMyRsvps={setMyRsvps} setBrowseEvents={setBrowseEvents} />\r\n              ))}\r\n        </ScrollView>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    paddingBottom: 10,\r\n  },\r\n  label: {\r\n    alignSelf: 'flex-start',\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginBottom: 10,\r\n    color: 'black',\r\n  },\r\n  scrollView: {\r\n    width: '100%',\r\n  },\r\n});\r\n\r\n\r\n\r\n\r\nexport default ProfileScreen;\r\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAEzC,OAAOC,aAAa;AACpB,OAAOC,SAAS;AAChB,SAASC,aAAa;AACtB,OAAOC,OAAO;AACd,SAASC,oBAAoB,IAAIC,EAAE,EAAEC,mBAAmB,IAAIC,EAAE,QAAQ,gCAAgC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvG,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAE1B,IAAAC,cAAA,GAUIX,aAAa,CAAC,CAAC;IATjBY,IAAI,GAAAD,cAAA,CAAJC,IAAI;IACJC,WAAW,GAAAF,cAAA,CAAXE,WAAW;IACXC,QAAQ,GAAAH,cAAA,CAARG,QAAQ;IACRC,WAAW,GAAAJ,cAAA,CAAXI,WAAW;IACXC,OAAO,GAAAL,cAAA,CAAPK,OAAO;IACPC,UAAU,GAAAN,cAAA,CAAVM,UAAU;IACVC,eAAe,GAAAP,cAAA,CAAfO,eAAe;IACfC,YAAY,GAAAR,cAAA,CAAZQ,YAAY;IACZC,eAAe,GAAAT,cAAA,CAAfS,eAAe;EAGjB,IAAMC,UAAU,GAAG;IACjBC,IAAI,EAAE;MACJC,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE,CAAC;MACfC,MAAM,EAAE,CAAC;MACTC,SAAS,EAAE;IACb,CAAC;IACDC,KAAK,EAAE;MACLC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,MAAM;MAClBC,YAAY,EAAE;IAChB,CAAC;IACDC,GAAG,EAAE;MACHC,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE,eAAe;MAC/BC,UAAU,EAAE,QAAQ;MACpBJ,YAAY,EAAE;IAChB,CAAC;IACDK,IAAI,EAAE;MACJC,KAAK,EAAE,EAAE;MACTC,MAAM,EAAE;IACV,CAAC;IACDC,cAAc,EAAE;MACdD,MAAM,EAAEnC,EAAE,CAAC,KAAK,CAAC;MACjB4B,YAAY,EAAE5B,EAAE,CAAC,KAAK;IACxB,CAAC;IACDqC,MAAM,EAAE;MACNF,MAAM,EAAEnC,EAAE,CAAC,MAAM;IACnB,CAAC;IACDsC,KAAK,EAAE;MACLH,MAAM,EAAE,MAAM;MACdD,KAAK,EAAEhC,EAAE,CAAC,MAAM,CAAC;MACjBoB,YAAY,EAAE;IAChB,CAAC;IACDiB,YAAY,EAAE;MACZnB,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE,EAAE;MACXC,YAAY,EAAE;IAChB,CAAC;IACDkB,YAAY,EAAE;MACZV,aAAa,EAAE,KAAK;MACpBC,cAAc,EAAE,eAAe;MAC/BU,SAAS,EAAE;IACb;EACF,CAAC;EAEDnD,SAAS,CAAC,YAAM;IACd,IAAMoD,SAAS;MAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;QAC5B,IAAI;UAEF,IAAMC,UAAU,SAAS/C,OAAO,CAACgD,WAAW,CAACrC,IAAI,CAACsC,GAAG,CAAC;UACtDnC,WAAW,CAACiC,UAAU,IAAI,EAAE,CAAC;UAC7B,IAAMG,QAAQ,SAASlD,OAAO,CAACmD,UAAU,CAACxC,IAAI,CAACsC,GAAG,CAAC;UACnDjC,UAAU,CAACkC,QAAQ,IAAI,EAAE,CAAC;UAC1B,IAAME,cAAc,SAASpD,OAAO,CAACqD,eAAe,CAAC1C,IAAI,CAACsC,GAAG,CAAC;UAC9D9B,eAAe,CAACiC,cAAc,CAAC;UAC/BE,OAAO,CAACC,GAAG,CAACH,cAAc,CAAC;QAC7B,CAAC,CAAC,OAAOI,KAAK,EAAE;UACdF,OAAO,CAACE,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAE9C;MACF,CAAC;MAAA,gBAdKZ,SAASA,CAAA;QAAA,OAAAC,IAAA,CAAAY,KAAA,OAAAC,SAAA;MAAA;IAAA,GAcd;IAEDd,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACjC,IAAI,CAACsC,GAAG,EAAEnC,WAAW,EAAEE,UAAU,CAAC,CAAC;EAEvC,OACER,KAAA,CAACZ,UAAU;IAAC+D,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAClCxD,IAAA,CAACT,aAAa;MAACc,IAAI,EAAEA,IAAK;MAACC,WAAW,EAAEA;IAAY,CAAE,CAAC,EAEvDJ,KAAA,CAACf,IAAI;MAAAqE,QAAA,GACHxD,IAAA,CAACZ,IAAI;QAACiE,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAD,QAAA,EAAC;MAAO,CAAM,CAAC,EACzCxD,IAAA,CAACV,UAAU;QAACoE,UAAU;QAACC,8BAA8B,EAAE,KAAM;QAACN,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAJ,QAAA,EACpFjD,QAAQ,IACPA,QAAQ,CAACsD,GAAG,CAAC,UAACC,KAAK;UAAA,OACjB9D,IAAA,CAACR,SAAS;YAACsB,UAAU,EAAEA,UAAW;YAAiBgD,KAAK,EAAEA,KAAM;YAACC,MAAM,EAAE1D,IAAI,IAAIA,IAAI,CAACsC,GAAI;YAACnC,WAAW,EAAEA,WAAY;YAACE,UAAU,EAAEA,UAAW;YAACC,eAAe,EAAEA;UAAgB,GAAtImD,KAAK,CAACnB,GAAkI,CAAC;QAAA,CAClL;MAAC,CACM,CAAC;IAAA,CACT,CAAC,EAEPzC,KAAA,CAACf,IAAI;MAAAqE,QAAA,GACHxD,IAAA,CAACZ,IAAI;QAACiE,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAD,QAAA,EAAC;MAAS,CAAM,CAAC,EAC3CxD,IAAA,CAACV,UAAU;QAACoE,UAAU;QAACC,8BAA8B,EAAE,KAAM;QAACN,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAJ,QAAA,EAClF/C,OAAO,IACNA,OAAO,CAACoD,GAAG,CAAC,UAACC,KAAK;UAAA,OAChB9D,IAAA,CAACR,SAAS;YAACsB,UAAU,EAAEA,UAAW;YAAiBgD,KAAK,EAAEA,KAAM;YAACC,MAAM,EAAE1D,IAAI,IAAIA,IAAI,CAACsC,GAAI;YAACnC,WAAW,EAAEA,WAAY;YAACE,UAAU,EAAEA,UAAW;YAACC,eAAe,EAAEA;UAAgB,GAAtImD,KAAK,CAACnB,GAAkI,CAAC;QAAA,CAClL;MAAC,CACI,CAAC;IAAA,CACT,CAAC,EAEPzC,KAAA,CAACf,IAAI;MAAAqE,QAAA,GACHxD,IAAA,CAACZ,IAAI;QAACiE,KAAK,EAAEC,MAAM,CAACG,KAAM;QAAAD,QAAA,EAAC;MAAU,CAAM,CAAC,EAC5CxD,IAAA,CAACV,UAAU;QAACoE,UAAU;QAACC,8BAA8B,EAAE,KAAM;QAACN,KAAK,EAAEC,MAAM,CAACM,UAAW;QAAAJ,QAAA,EAClF5C,YAAY,IACXA,YAAY,CAACiD,GAAG,CAAC,UAACC,KAAK;UAAA,OACrB9D,IAAA,CAACR,SAAS;YAACsB,UAAU,EAAEA,UAAW;YAAiBgD,KAAK,EAAEA,KAAM;YAACC,MAAM,EAAE1D,IAAI,IAAIA,IAAI,CAACsC,GAAI;YAACnC,WAAW,EAAEA,WAAY;YAACE,UAAU,EAAEA,UAAW;YAACC,eAAe,EAAEA;UAAgB,GAAtImD,KAAK,CAACnB,GAAkI,CAAC;QAAA,CAClL;MAAC,CACI,CAAC;IAAA,CACT,CAAC;EAAA,CACG,CAAC;AAEjB,CAAC;AAED,IAAMW,MAAM,GAAGjE,UAAU,CAAC2E,MAAM,CAAC;EAC/BT,SAAS,EAAE;IACTU,IAAI,EAAE,CAAC;IACPC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE;EACjB,CAAC;EACDX,KAAK,EAAE;IACLY,SAAS,EAAE,YAAY;IACvB/C,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE,EAAE;IAChB8C,KAAK,EAAE;EACT,CAAC;EACDV,UAAU,EAAE;IACV9B,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAKF,eAAe3B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}