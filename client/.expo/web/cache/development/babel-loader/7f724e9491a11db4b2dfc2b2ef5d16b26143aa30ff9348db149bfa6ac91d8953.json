{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport EventCard from \"./EventCard\";\nimport { useAppContext } from \"./AppContext\";\nimport eventApi from \"../api/eventApi\";\nimport PlusIcon from \"../assets/plus.png\";\nimport { useNavigation } from '@react-navigation/native';\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BrowseScreen = function BrowseScreen() {\n  var navigation = useNavigation();\n  var _useAppContext = useAppContext(),\n    user = _useAppContext.user,\n    browseEvents = _useAppContext.browseEvents,\n    setBrowseEvents = _useAppContext.setBrowseEvents;\n  useEffect(function () {\n    var fetchEvents = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var eventData = yield eventApi.getEvents();\n          var filteredEvents = eventData.filter(function (event) {\n            return event.status !== 'cancelled';\n          });\n          setBrowseEvents(filteredEvents);\n        } catch (error) {\n          console.error('Error fetching events:', error);\n        }\n      });\n      return function fetchEvents() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    fetchEvents();\n  }, [setBrowseEvents]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(TouchableOpacity, {\n      style: styles.buttonContainer,\n      onPress: function onPress() {\n        navigation.navigate('Create Event');\n      },\n      children: [_jsx(Text, {\n        style: styles.buttonText,\n        children: \"Create Event\"\n      }), _jsx(Image, {\n        source: PlusIcon,\n        style: styles.plusIcon\n      })]\n    }), _jsx(ScrollView, {\n      style: styles.scroll,\n      children: browseEvents ? browseEvents.map(function (event) {\n        return _jsx(EventCard, {\n          event: event\n        }, event._id);\n      }) : _jsx(Text, {\n        children: \"Issue Retrieving Events from the database\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scroll: {\n    width: wp('95%'),\n    maxWidth: 1000\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderWidth: 1,\n    borderRadius: 12,\n    padding: 8,\n    backgroundColor: 'black',\n    margin: 10,\n    shadowColor: 'black',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.8,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  buttonText: {\n    color: 'white',\n    marginRight: 8\n  },\n  plusIcon: {\n    width: 20,\n    height: 20,\n    tintColor: 'white'\n  }\n});\nexport default BrowseScreen;","map":{"version":3,"names":["React","useEffect","View","Text","StyleSheet","ScrollView","Image","TouchableOpacity","EventCard","useAppContext","eventApi","PlusIcon","useNavigation","widthPercentageToDP","wp","heightPercentageToDP","hp","jsx","_jsx","jsxs","_jsxs","BrowseScreen","navigation","_useAppContext","user","browseEvents","setBrowseEvents","fetchEvents","_ref","_asyncToGenerator","eventData","getEvents","filteredEvents","filter","event","status","error","console","apply","arguments","style","styles","container","children","buttonContainer","onPress","navigate","buttonText","source","plusIcon","scroll","map","_id","create","flex","justifyContent","alignItems","width","maxWidth","flexDirection","borderWidth","borderRadius","padding","backgroundColor","margin","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","elevation","color","marginRight","tintColor"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/BrowseScreen.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, Image, TouchableOpacity } from 'react-native';\r\nimport EventCard from './EventCard';\r\nimport { useAppContext } from './AppContext';\r\nimport eventApi from '../api/eventApi';\r\nimport PlusIcon from '../assets/plus.png';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { widthPercentageToDP as wp, heightPercentageToDP as hp } from 'react-native-responsive-screen';\r\nconst BrowseScreen = () => {\r\n  const navigation = useNavigation();\r\n\r\n  const {\r\n    user,\r\n    browseEvents,\r\n    setBrowseEvents,\r\n  } = useAppContext(); // Use the context hook\r\n\r\n  useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const eventData = await eventApi.getEvents();\r\n        // Filter out events with status 'cancelled'\r\n        const filteredEvents = eventData.filter(event => event.status !== 'cancelled');\r\n        setBrowseEvents(filteredEvents);\r\n      } catch (error) {\r\n        console.error('Error fetching events:', error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, [setBrowseEvents]);\r\n\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TouchableOpacity\r\n        style={styles.buttonContainer}\r\n        onPress={() => {\r\n          navigation.navigate('Create Event')\r\n        }}\r\n      >\r\n        <Text style={styles.buttonText}>Create Event</Text>\r\n        <Image source={PlusIcon} style={styles.plusIcon} />\r\n      </TouchableOpacity>\r\n      <ScrollView style={styles.scroll}>\r\n        {browseEvents ? (\r\n          browseEvents.map((event) => (\r\n            <EventCard key={event._id} event={event} />\r\n          ))\r\n        ) : (\r\n          <Text>Issue Retrieving Events from the database</Text>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  scroll: {\r\n    width: wp('95%'),\r\n    maxWidth: 1000,\r\n  },\r\n  buttonContainer: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderWidth: 1,\r\n    borderRadius: 12,\r\n    padding: 8,\r\n    backgroundColor: 'black',\r\n    margin: 10,\r\n    shadowColor: 'black',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.8,\r\n    shadowRadius: 4,\r\n    elevation: 5, // For Android\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    marginRight: 8,\r\n  },\r\n  plusIcon: {\r\n    width: 20,\r\n    height: 20,\r\n    tintColor: 'white',\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default BrowseScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}