{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MultiImagePicker = function MultiImagePicker(_ref) {\n  var onImagesSelected = _ref.onImagesSelected;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    images = _useState2[0],\n    setImages = _useState2[1];\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n        multiple: true\n      });\n      if (!result.cancelled) {\n        setImages([].concat(_toConsumableArray(images), _toConsumableArray(result.assets)));\n        onImagesSelected([].concat(_toConsumableArray(images), _toConsumableArray(result.assets)));\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Pick images from camera roll\",\n      onPress: pickImage\n    }), _jsx(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      children: images.map(function (image, index) {\n        return _jsx(Image, {\n          source: {\n            uri: image.uri\n          },\n          style: styles.image\n        }, index);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  image: {\n    width: 100,\n    height: 100,\n    marginRight: 10\n  }\n});\nexport default MultiImagePicker;","map":{"version":3,"names":["React","useState","View","Button","ScrollView","Image","StyleSheet","ImagePicker","jsx","_jsx","jsxs","_jsxs","MultiImagePicker","_ref","onImagesSelected","_useState","_useState2","_slicedToArray","images","setImages","pickImage","_ref2","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","multiple","cancelled","concat","_toConsumableArray","assets","apply","arguments","children","title","onPress","horizontal","showsHorizontalScrollIndicator","map","image","index","source","uri","style","styles","create","width","height","marginRight"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/MultiImagePicker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Button, ScrollView, Image, StyleSheet } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nconst MultiImagePicker = ({ onImagesSelected }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n      multiple: true, // Enable multiple selection\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      setImages([...images, ...result.assets]); // Concatenate new images with existing ones\r\n      onImagesSelected([...images, ...result.assets]); // Notify parent component about the selected images\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Button title=\"Pick images from camera roll\" onPress={pickImage} />\r\n      <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n        {images.map((image, index) => (\r\n          <Image key={index} source={{ uri: image.uri }} style={styles.image} />\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default MultiImagePicker;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAExC,OAAO,KAAKC,WAAW,MAAM,mBAAmB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEjD,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAAC,IAAA,EAA6B;EAAA,IAAvBC,gBAAgB,GAAAD,IAAA,CAAhBC,gBAAgB;EAC1C,IAAAC,SAAA,GAA4Bd,QAAQ,CAAC,EAAE,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,IAAMI,SAAS;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MAC5B,IAAIC,MAAM,SAAShB,WAAW,CAACiB,uBAAuB,CAAC;QACrDC,UAAU,EAAElB,WAAW,CAACmB,gBAAgB,CAACC,MAAM;QAC/CC,aAAa,EAAE,IAAI;QACnBC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;QACdC,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEF,IAAI,CAACR,MAAM,CAACS,SAAS,EAAE;QACrBb,SAAS,IAAAc,MAAA,CAAAC,kBAAA,CAAKhB,MAAM,GAAAgB,kBAAA,CAAKX,MAAM,CAACY,MAAM,EAAC,CAAC;QACxCrB,gBAAgB,IAAAmB,MAAA,CAAAC,kBAAA,CAAKhB,MAAM,GAAAgB,kBAAA,CAAKX,MAAM,CAACY,MAAM,EAAC,CAAC;MACjD;IACF,CAAC;IAAA,gBAbKf,SAASA,CAAA;MAAA,OAAAC,KAAA,CAAAe,KAAA,OAAAC,SAAA;IAAA;EAAA,GAad;EAED,OACE1B,KAAA,CAACT,IAAI;IAAAoC,QAAA,GACH7B,IAAA,CAACN,MAAM;MAACoC,KAAK,EAAC,8BAA8B;MAACC,OAAO,EAAEpB;IAAU,CAAE,CAAC,EACnEX,IAAA,CAACL,UAAU;MAACqC,UAAU;MAACC,8BAA8B,EAAE,KAAM;MAAAJ,QAAA,EAC1DpB,MAAM,CAACyB,GAAG,CAAC,UAACC,KAAK,EAAEC,KAAK;QAAA,OACvBpC,IAAA,CAACJ,KAAK;UAAayC,MAAM,EAAE;YAAEC,GAAG,EAAEH,KAAK,CAACG;UAAI,CAAE;UAACC,KAAK,EAAEC,MAAM,CAACL;QAAM,GAAvDC,KAAyD,CAAC;MAAA,CACvE;IAAC,CACQ,CAAC;EAAA,CACT,CAAC;AAEX,CAAC;AAED,IAAMI,MAAM,GAAG3C,UAAU,CAAC4C,MAAM,CAAC;EAC/BN,KAAK,EAAE;IACLO,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE,GAAG;IACXC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAezC,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}