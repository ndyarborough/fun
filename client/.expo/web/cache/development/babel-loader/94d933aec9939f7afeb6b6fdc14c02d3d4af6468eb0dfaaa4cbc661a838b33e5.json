{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useState, useCallback, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { GiftedChat, InputToolbar, Composer, Send, Bubble } from 'react-native-gifted-chat';\nimport messageApi from \"../api/messageApi\";\nimport { MaterialIcons } from '@expo/vector-icons';\nimport userApi from \"../api/userApi\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SendMessageScreen = function SendMessageScreen(_ref) {\n  var route = _ref.route;\n  var _route$params = route.params,\n    senderId = _route$params.senderId,\n    receiverId = _route$params.receiverId;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    messages = _useState2[0],\n    setMessages = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    receiver = _useState4[0],\n    setReceiver = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    sender = _useState6[0],\n    setSender = _useState6[1];\n  useEffect(function () {\n    var loadMessageHistory = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var receiverInfo = yield userApi.getUserInfo(receiverId);\n          var senderInfo = yield userApi.getUserInfo(senderId);\n          setReceiver(receiverInfo);\n          setSender(senderInfo);\n          var history = yield messageApi.getThread(senderId, receiverId);\n          var formattedHistory = history.map(function (msg) {\n            return {\n              _id: msg._id,\n              text: msg.text,\n              createdAt: new Date(msg.createdAt),\n              user: {\n                _id: msg.sender,\n                name: senderInfo.username,\n                avatar: null\n              },\n              position: msg.sender === senderId ? 'right' : 'left'\n            };\n          });\n          setMessages(formattedHistory.reverse());\n        } catch (error) {\n          console.error('Error loading message history:', error);\n        }\n      });\n      return function loadMessageHistory() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    loadMessageHistory();\n  }, [senderId, receiverId]);\n  var onSend = useCallback(_asyncToGenerator(function* () {\n    var newMessages = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var message = newMessages[0];\n    try {\n      yield messageApi.sendMessage({\n        sender: senderId,\n        receiver: receiverId,\n        text: message.text\n      });\n      var updatedMessages = newMessages.map(function (msg) {\n        return _objectSpread(_objectSpread({}, msg), {}, {\n          user: _objectSpread(_objectSpread({}, msg.user), {}, {\n            name: sender.username\n          })\n        });\n      });\n      setMessages(function (previousMessages) {\n        return GiftedChat.append(previousMessages, updatedMessages);\n      });\n    } catch (error) {\n      console.error('Error sending message:', error);\n    }\n  }), [senderId, receiverId, receiver]);\n  var renderBubble = function renderBubble(props) {\n    var currentMessage = props.currentMessage,\n      previousMessage = props.previousMessage;\n    if (currentMessage.position === 'left') {\n      var isSameUser = previousMessage && previousMessage.user && previousMessage.user._id === currentMessage.user._id;\n      if (isSameUser) {\n        return _jsx(Bubble, _objectSpread({}, props));\n      }\n      return _jsx(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'flex-start'\n        },\n        children: _jsx(Bubble, _objectSpread({}, props))\n      });\n    }\n    return _jsx(Bubble, _objectSpread({}, props));\n  };\n  var renderSend = function renderSend(props) {\n    return _jsx(Send, _objectSpread(_objectSpread({}, props), {}, {\n      children: _jsx(View, {\n        style: styles.sendButton,\n        children: _jsx(MaterialIcons, {\n          name: \"send\",\n          size: 24,\n          color: \"white\"\n        })\n      })\n    }));\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [receiver && _jsxs(View, {\n      style: styles.receiverContainer,\n      children: [_jsx(Image, {\n        source: {\n          uri: receiver.profilePic\n        },\n        style: styles.profilePic\n      }), _jsx(Text, {\n        children: receiver.username\n      })]\n    }), _jsx(GiftedChat, {\n      messages: messages,\n      onSend: onSend,\n      user: {\n        _id: senderId\n      },\n      renderInputToolbar: function renderInputToolbar(props) {\n        return _jsx(InputToolbar, _objectSpread(_objectSpread({}, props), {}, {\n          containerStyle: {\n            backgroundColor: 'white'\n          }\n        }));\n      },\n      renderComposer: function renderComposer(props) {\n        return _jsx(Composer, _objectSpread(_objectSpread({}, props), {}, {\n          textInputStyle: {\n            color: 'black',\n            backgroundColor: 'white'\n          },\n          placeholder: \"Type a message...\"\n        }));\n      },\n      renderSend: renderSend,\n      renderBubble: renderBubble,\n      timeFormat: \"LT\"\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  sendButton: {\n    marginRight: 10,\n    marginBottom: 5,\n    backgroundColor: '#007AFF',\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10\n  },\n  receiverContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: '#ccc'\n  },\n  profilePic: {\n    width: 50,\n    height: 50,\n    borderRadius: 25,\n    marginRight: 10\n  }\n});\nexport default SendMessageScreen;","map":{"version":3,"names":["React","useState","useCallback","useEffect","View","StyleSheet","Text","Image","GiftedChat","InputToolbar","Composer","Send","Bubble","messageApi","MaterialIcons","userApi","jsx","_jsx","jsxs","_jsxs","SendMessageScreen","_ref","route","_route$params","params","senderId","receiverId","_useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","receiver","setReceiver","_useState5","_useState6","sender","setSender","loadMessageHistory","_ref2","_asyncToGenerator","receiverInfo","getUserInfo","senderInfo","history","getThread","formattedHistory","map","msg","_id","text","createdAt","Date","user","name","username","avatar","position","reverse","error","console","apply","arguments","onSend","newMessages","length","undefined","message","sendMessage","updatedMessages","_objectSpread","previousMessages","append","renderBubble","props","currentMessage","previousMessage","isSameUser","style","flexDirection","alignItems","children","renderSend","styles","sendButton","size","color","container","receiverContainer","source","uri","profilePic","renderInputToolbar","containerStyle","backgroundColor","renderComposer","textInputStyle","placeholder","timeFormat","create","flex","marginRight","marginBottom","borderRadius","paddingVertical","paddingHorizontal","padding","borderBottomWidth","borderBottomColor","width","height"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/SendMessageScreen.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, Image } from 'react-native';\r\nimport { GiftedChat, InputToolbar, Composer, Send, Bubble } from 'react-native-gifted-chat';\r\nimport messageApi from '../api/messageApi';\r\nimport { MaterialIcons } from '@expo/vector-icons'; // Import the desired icon library\r\nimport userApi from '../api/userApi';\r\n// import CustomMessage from './CustomMessage'; // Import the CustomMessage component\r\n\r\nconst SendMessageScreen = ({ route }) => {\r\n  const { senderId, receiverId } = route.params;\r\n  const [messages, setMessages] = useState([]);\r\n  const [receiver, setReceiver] = useState(null);\r\n  const [sender, setSender] = useState(null)\r\n\r\n  useEffect(() => {\r\n    const loadMessageHistory = async () => {\r\n      try {\r\n        const receiverInfo = await userApi.getUserInfo(receiverId);\r\n        const senderInfo = await userApi.getUserInfo(senderId)\r\n        setReceiver(receiverInfo);\r\n        setSender(senderInfo)\r\n        const history = await messageApi.getThread(senderId, receiverId);\r\n        const formattedHistory = history.map((msg) => ({\r\n          _id: msg._id,\r\n          text: msg.text,\r\n          createdAt: new Date(msg.createdAt),\r\n          user: {\r\n            _id: msg.sender,\r\n            name: senderInfo.username,\r\n            avatar: null\r\n          },\r\n          position: msg.sender === senderId ? 'right' : 'left',\r\n        }));\r\n\r\n        setMessages(formattedHistory.reverse());\r\n      } catch (error) {\r\n        console.error('Error loading message history:', error);\r\n      }\r\n    };\r\n\r\n    loadMessageHistory();\r\n  }, [senderId, receiverId]);\r\n\r\n  const onSend = useCallback(async (newMessages = []) => {\r\n    const message = newMessages[0];\r\n    try {\r\n      await messageApi.sendMessage({\r\n        sender: senderId,\r\n        receiver: receiverId,\r\n        text: message.text,\r\n      });\r\n\r\n      // Ensure that the user object for the new message includes the 'avatar' property\r\n      const updatedMessages = newMessages.map(msg => ({\r\n        ...msg,\r\n        user: {\r\n          ...msg.user,\r\n          // avatar: sender.profilePic, // Assuming receiver.profilePic is the avatar URL\r\n          name: sender.username\r\n        },\r\n      }));\r\n\r\n      setMessages(previousMessages => GiftedChat.append(previousMessages, updatedMessages));\r\n    } catch (error) {\r\n      console.error('Error sending message:', error);\r\n    }\r\n  }, [senderId, receiverId, receiver]);\r\n\r\n  const renderBubble = (props) => {\r\n    const { currentMessage, previousMessage } = props;\r\n  \r\n    // Check if the message position is 'left' (receiver's message)\r\n    if (currentMessage.position === 'left') {\r\n      // Check if the previous message is from the same user\r\n      const isSameUser = previousMessage\r\n        && previousMessage.user\r\n        && previousMessage.user._id === currentMessage.user._id;\r\n  \r\n      // If it's the same user, don't render the avatar again\r\n      if (isSameUser) {\r\n        return <Bubble {...props} />;\r\n      }\r\n  \r\n      return (\r\n        <View style={{ flexDirection: 'row', alignItems: 'flex-start' }}>\r\n          {/* Display the receiver's profile image */}\r\n        \r\n          <Bubble {...props} />\r\n        </View>\r\n      );\r\n    }\r\n  \r\n    // For messages from the sender (on the right), only display the message bubble\r\n    return <Bubble {...props} />;\r\n  };\r\n  \r\n\r\n  const renderSend = (props) => (\r\n    <Send {...props}>\r\n      <View style={styles.sendButton}>\r\n        <MaterialIcons name=\"send\" size={24} color=\"white\" />\r\n      </View>\r\n    </Send>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {receiver && (\r\n        <View style={styles.receiverContainer}>\r\n          <Image source={{ uri: receiver.profilePic }} style={styles.profilePic} />\r\n          <Text>{receiver.username}</Text>\r\n        </View>\r\n      )}\r\n      <GiftedChat\r\n        messages={messages}\r\n        onSend={onSend}\r\n        user={{\r\n          _id: senderId,\r\n          // avatar: receiver.profilePic\r\n        }}\r\n        renderInputToolbar={(props) => (\r\n          <InputToolbar\r\n            {...props}\r\n            containerStyle={{ backgroundColor: 'white' }}\r\n          />\r\n        )}\r\n        renderComposer={(props) => (\r\n          <Composer\r\n            {...props}\r\n            textInputStyle={{ color: 'black', backgroundColor: 'white' }}\r\n            placeholder=\"Type a message...\"\r\n          />\r\n        )}\r\n        renderSend={renderSend}\r\n        // Customize renderBubble to include the avatar inside the message bubble\r\n        renderBubble={renderBubble}\r\n        timeFormat='LT'\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  sendButton: {\r\n    marginRight: 10,\r\n    marginBottom: 5,\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 5,\r\n    paddingVertical: 5,\r\n    paddingHorizontal: 10,\r\n  },\r\n  receiverContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: 10,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: '#ccc',\r\n  },\r\n  profilePic: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default SendMessageScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}