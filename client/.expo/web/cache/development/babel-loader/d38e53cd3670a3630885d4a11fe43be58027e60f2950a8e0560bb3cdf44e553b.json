{"ast":null,"code":"export var localTime = function localTime(utcTimestamp) {\n  var options = {\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  };\n  return utcTimestamp ? new Date(utcTimestamp).toLocaleTimeString('en-US', options) : null;\n};\nexport var localDate = function localDate(utcTimestamp) {\n  var options = {\n    weekday: 'short',\n    month: 'short',\n    day: 'numeric'\n  };\n  var formattedDate = utcTimestamp ? new Date(utcTimestamp).toLocaleDateString('en-US', options) : null;\n  if (formattedDate) {\n    var day = new Date(utcTimestamp).getDate();\n    var daySuffix = getDaySuffix(day);\n    return formattedDate.replace(/\\d+/, function (day) {\n      return `${day}${daySuffix}`;\n    });\n  }\n  return null;\n};\nexport var getDaySuffix = function getDaySuffix(day) {\n  if (day >= 11 && day <= 13) {\n    return 'th';\n  }\n  switch (day % 10) {\n    case 1:\n      return 'st';\n    case 2:\n      return 'nd';\n    case 3:\n      return 'rd';\n    default:\n      return 'th';\n  }\n};","map":{"version":3,"names":["localTime","utcTimestamp","options","hour","minute","hour12","Date","toLocaleTimeString","localDate","weekday","month","day","formattedDate","toLocaleDateString","getDate","daySuffix","getDaySuffix","replace"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/utils/formatFunctions.js"],"sourcesContent":["// Function to format local time as hh:mm\r\nexport const localTime = (utcTimestamp) => {\r\n  const options = {\r\n    hour: 'numeric',\r\n    minute: 'numeric',\r\n    hour12: true,\r\n  };\r\n\r\n  return utcTimestamp ? new Date(utcTimestamp).toLocaleTimeString('en-US', options) : null;\r\n};\r\n\r\n// Function to format local date as MM/DD/YYYY\r\nexport const localDate = (utcTimestamp) => {\r\n  const options = {\r\n    weekday: 'short',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  };\r\n\r\n  const formattedDate = utcTimestamp ? new Date(utcTimestamp).toLocaleDateString('en-US', options) : null;\r\n\r\n  if (formattedDate) {\r\n    const day = new Date(utcTimestamp).getDate();\r\n    const daySuffix = getDaySuffix(day);\r\n    return formattedDate.replace(/\\d+/, (day) => `${day}${daySuffix}`);\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// Add getDaySuffix function\r\nexport const getDaySuffix = (day) => {\r\n  if (day >= 11 && day <= 13) {\r\n    return 'th';\r\n  }\r\n\r\n  switch (day % 10) {\r\n    case 1:\r\n      return 'st';\r\n    case 2:\r\n      return 'nd';\r\n    case 3:\r\n      return 'rd';\r\n    default:\r\n      return 'th';\r\n  }\r\n};\r\n"],"mappings":"AACA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAASA,CAAIC,YAAY,EAAK;EACzC,IAAMC,OAAO,GAAG;IACdC,IAAI,EAAE,SAAS;IACfC,MAAM,EAAE,SAAS;IACjBC,MAAM,EAAE;EACV,CAAC;EAED,OAAOJ,YAAY,GAAG,IAAIK,IAAI,CAACL,YAAY,CAAC,CAACM,kBAAkB,CAAC,OAAO,EAAEL,OAAO,CAAC,GAAG,IAAI;AAC1F,CAAC;AAGD,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAASA,CAAIP,YAAY,EAAK;EACzC,IAAMC,OAAO,GAAG;IACdO,OAAO,EAAE,OAAO;IAChBC,KAAK,EAAE,OAAO;IACdC,GAAG,EAAE;EACP,CAAC;EAED,IAAMC,aAAa,GAAGX,YAAY,GAAG,IAAIK,IAAI,CAACL,YAAY,CAAC,CAACY,kBAAkB,CAAC,OAAO,EAAEX,OAAO,CAAC,GAAG,IAAI;EAEvG,IAAIU,aAAa,EAAE;IACjB,IAAMD,GAAG,GAAG,IAAIL,IAAI,CAACL,YAAY,CAAC,CAACa,OAAO,CAAC,CAAC;IAC5C,IAAMC,SAAS,GAAGC,YAAY,CAACL,GAAG,CAAC;IACnC,OAAOC,aAAa,CAACK,OAAO,CAAC,KAAK,EAAE,UAACN,GAAG;MAAA,OAAM,GAAEA,GAAI,GAAEI,SAAU,EAAC;IAAA,EAAC;EACpE;EAEA,OAAO,IAAI;AACb,CAAC;AAGD,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAIL,GAAG,EAAK;EACnC,IAAIA,GAAG,IAAI,EAAE,IAAIA,GAAG,IAAI,EAAE,EAAE;IAC1B,OAAO,IAAI;EACb;EAEA,QAAQA,GAAG,GAAG,EAAE;IACd,KAAK,CAAC;MACJ,OAAO,IAAI;IACb,KAAK,CAAC;MACJ,OAAO,IAAI;IACb,KAAK,CAAC;MACJ,OAAO,IAAI;IACb;MACE,OAAO,IAAI;EACf;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}