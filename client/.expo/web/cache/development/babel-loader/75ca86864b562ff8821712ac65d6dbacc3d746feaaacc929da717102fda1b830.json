{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport StaticContainer from \"./StaticContainer\";\nimport { RootControllerChanges } from \"./RootController\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _default = function (_Component) {\n  _inherits(_default, _Component);\n  var _super = _createSuper(_default);\n  function _default(props) {\n    var _this;\n    _classCallCheck(this, _default);\n    _this = _super.call(this, props);\n    _this.siblingsPool = [];\n    _this.updatedSiblings = new Set();\n    _this.unmounted = false;\n    _this.state = {\n      siblings: []\n    };\n    return _this;\n  }\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      this.props.controller.setCallback(function (id, change) {\n        setImmediate(function () {\n          return _this2.commitChange(id, change);\n        });\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updatedSiblings.clear();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n    }\n  }, {\n    key: \"commitChange\",\n    value: function commitChange(id, _ref) {\n      var _this3 = this;\n      var change = _ref.change,\n        element = _ref.element,\n        updateCallback = _ref.updateCallback;\n      if (this.unmounted) {\n        return;\n      }\n      var siblings = Array.from(this.siblingsPool);\n      var index = siblings.findIndex(function (sibling) {\n        return sibling.id === id;\n      });\n      if (change === RootControllerChanges.Remove) {\n        if (index > -1) {\n          siblings.splice(index, 1);\n        } else {\n          this.invokeCallback(updateCallback);\n          return;\n        }\n      } else if (change === RootControllerChanges.Update) {\n        if (index > -1) {\n          siblings.splice(index, 1, {\n            element: element,\n            id: id\n          });\n          this.updatedSiblings.add(id);\n        } else {\n          this.invokeCallback(updateCallback);\n          return;\n        }\n      } else {\n        if (index > -1) {\n          siblings.splice(index, 1);\n        }\n        siblings.push({\n          element: element,\n          id: id\n        });\n        this.updatedSiblings.add(id);\n      }\n      this.siblingsPool = siblings;\n      this.setState({\n        siblings: siblings\n      }, function () {\n        return _this3.invokeCallback(updateCallback);\n      });\n    }\n  }, {\n    key: \"invokeCallback\",\n    value: function invokeCallback(callback) {\n      if (callback) {\n        callback();\n      }\n    }\n  }, {\n    key: \"renderSiblings\",\n    value: function renderSiblings() {\n      var _this4 = this;\n      return this.state.siblings.map(function (_ref2) {\n        var id = _ref2.id,\n          element = _ref2.element;\n        return _jsx(StaticContainer, {\n          shouldUpdate: _this4.updatedSiblings.has(id),\n          children: _this4.wrapSibling(element)\n        }, `root-sibling-${id}`);\n      });\n    }\n  }, {\n    key: \"wrapSibling\",\n    value: function wrapSibling(element) {\n      var renderSibling = this.props.renderSibling;\n      if (renderSibling) {\n        return renderSibling(element);\n      } else {\n        return element;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _jsxs(_Fragment, {\n        children: [this.props.children, this.renderSiblings()]\n      });\n    }\n  }]);\n  return _default;\n}(Component);\nexport { _default as default };","map":{"version":3,"names":["React","Component","StaticContainer","RootControllerChanges","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","_default","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","siblingsPool","updatedSiblings","Set","unmounted","state","siblings","_createClass","key","value","componentDidMount","_this2","controller","setCallback","id","change","setImmediate","commitChange","componentDidUpdate","clear","componentWillUnmount","_ref","_this3","element","updateCallback","Array","from","index","findIndex","sibling","Remove","splice","invokeCallback","Update","add","push","setState","callback","renderSiblings","_this4","map","_ref2","shouldUpdate","has","children","wrapSibling","renderSibling","render","default"],"sources":["C:\\Users\\dyarb\\batcave\\Meetup_2.0\\client\\node_modules\\react-native-root-toast\\node_modules\\react-native-root-siblings\\src\\RootSiblings.tsx"],"sourcesContent":["import React, { Component, ReactChild, ReactNode } from 'react';\nimport StaticContainer from './StaticContainer';\n\nimport RootController, {\n  RootControllerAction,\n  RootControllerChanges\n} from './RootController';\n\ninterface RootSiblingsProps {\n  controller: RootController;\n  renderSibling?: (sibling: ReactNode) => ReactNode;\n  children: ReactChild;\n}\n\ninterface RootSiblingsState {\n  siblings: Array<{\n    id: string;\n    element: ReactNode;\n  }>;\n}\n\nexport default class extends Component<RootSiblingsProps, RootSiblingsState> {\n  constructor(props: RootSiblingsProps) {\n    super(props);\n\n    this.state = {\n      siblings: []\n    };\n  }\n\n  public componentDidMount() {\n    this.props.controller.setCallback((id, change) => {\n      setImmediate(() => this.commitChange(id, change));\n    });\n  }\n\n  public componentDidUpdate() {\n    this.updatedSiblings.clear();\n  }\n\n  public componentWillUnmount() {\n    this.unmounted = true;\n  }\n\n  private siblingsPool: Array<{\n    id: string;\n    element: ReactNode;\n  }> = [];\n\n  private updatedSiblings: Set<string> = new Set();\n  private unmounted = false;\n\n  private commitChange(\n    id: string,\n    { change, element, updateCallback }: RootControllerAction\n  ) {\n    if (this.unmounted) {\n      return;\n    }\n\n    const siblings = Array.from(this.siblingsPool);\n    const index = siblings.findIndex(sibling => sibling.id === id);\n    if (change === RootControllerChanges.Remove) {\n      if (index > -1) {\n        siblings.splice(index, 1);\n      } else {\n        this.invokeCallback(updateCallback);\n        return;\n      }\n    } else if (change === RootControllerChanges.Update) {\n      if (index > -1) {\n        siblings.splice(index, 1, {\n          element,\n          id\n        });\n        this.updatedSiblings.add(id);\n      } else {\n        this.invokeCallback(updateCallback);\n        return;\n      }\n    } else {\n      if (index > -1) {\n        siblings.splice(index, 1);\n      }\n\n      siblings.push({\n        element,\n        id\n      });\n      this.updatedSiblings.add(id);\n    }\n\n    this.siblingsPool = siblings;\n    this.setState(\n      {\n        siblings\n      },\n      () => this.invokeCallback(updateCallback)\n    );\n  }\n\n  private invokeCallback(callback?: () => void) {\n    if (callback) {\n      callback();\n    }\n  }\n\n  private renderSiblings() {\n    return this.state.siblings.map(({ id, element }) => {\n      return (\n        <StaticContainer\n          key={`root-sibling-${id}`}\n          shouldUpdate={this.updatedSiblings.has(id)}\n        >\n          {this.wrapSibling(element)}\n        </StaticContainer>\n      );\n    });\n  }\n\n  private wrapSibling(element: ReactNode | null): ReactNode {\n    const { renderSibling } = this.props;\n    if (renderSibling) {\n      return renderSibling(element);\n    } else {\n      return element;\n    }\n  }\n\n  public render() {\n    return (\n      <>\n        {this.props.children}\n        {this.renderSiblings()}\n      </>\n    );\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}