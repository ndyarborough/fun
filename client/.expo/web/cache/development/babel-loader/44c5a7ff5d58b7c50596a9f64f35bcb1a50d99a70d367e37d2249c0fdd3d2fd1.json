{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nexport var RootControllerChanges;\n(function (RootControllerChanges) {\n  RootControllerChanges[RootControllerChanges[\"Insert\"] = 0] = \"Insert\";\n  RootControllerChanges[RootControllerChanges[\"Update\"] = 1] = \"Update\";\n  RootControllerChanges[RootControllerChanges[\"Remove\"] = 2] = \"Remove\";\n})(RootControllerChanges || (RootControllerChanges = {}));\nvar RootController = function () {\n  function RootController() {\n    _classCallCheck(this, RootController);\n    this.siblings = new Set();\n    this.pendingActions = [];\n    this.callback = null;\n  }\n  _createClass(RootController, [{\n    key: \"update\",\n    value: function update(id, element, callback) {\n      if (!this.siblings.has(id)) {\n        this.emit(id, {\n          change: RootControllerChanges.Insert,\n          element: element,\n          updateCallback: callback\n        });\n        this.siblings.add(id);\n      } else {\n        this.emit(id, {\n          change: RootControllerChanges.Update,\n          element: element,\n          updateCallback: callback\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy(id, callback) {\n      if (this.siblings.has(id)) {\n        this.emit(id, {\n          change: RootControllerChanges.Remove,\n          element: null,\n          updateCallback: callback\n        });\n        this.siblings.delete(id);\n      } else if (callback) {\n        callback();\n      }\n    }\n  }, {\n    key: \"setCallback\",\n    value: function setCallback(callback) {\n      this.callback = callback;\n      this.pendingActions.forEach(function (_ref) {\n        var id = _ref.id,\n          action = _ref.action;\n        callback(id, action);\n      });\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(id, action) {\n      if (this.callback) {\n        this.callback(id, action);\n      } else {\n        this.pendingActions.push({\n          action: action,\n          id: id\n        });\n      }\n    }\n  }]);\n  return RootController;\n}();\nexport { RootController as default };","map":{"version":3,"names":["RootControllerChanges","RootController","_classCallCheck","siblings","Set","pendingActions","callback","_createClass","key","value","update","id","element","has","emit","change","Insert","updateCallback","add","Update","destroy","Remove","delete","setCallback","forEach","_ref","action","push","default"],"sources":["C:\\Users\\dyarb\\batcave\\Meetup_2.0\\client\\node_modules\\react-native-root-toast\\node_modules\\react-native-root-siblings\\src\\RootController.ts"],"sourcesContent":["import { ReactNode } from 'react';\n\nexport enum RootControllerChanges {\n  Insert,\n  Update,\n  Remove\n}\n\nexport interface RootControllerAction {\n  change: RootControllerChanges;\n  element: ReactNode;\n  updateCallback?: () => void;\n}\n\nexport default class RootController {\n  private siblings: Set<string> = new Set();\n  private pendingActions: Array<{\n    id: string;\n    action: RootControllerAction;\n  }> = [];\n  private callback:\n    | ((id: string, action: RootControllerAction) => void)\n    | null = null;\n\n  public update(id: string, element: ReactNode, callback?: () => void) {\n    if (!this.siblings.has(id)) {\n      this.emit(id, {\n        change: RootControllerChanges.Insert,\n        element,\n        updateCallback: callback\n      });\n      this.siblings.add(id);\n    } else {\n      this.emit(id, {\n        change: RootControllerChanges.Update,\n        element,\n        updateCallback: callback\n      });\n    }\n  }\n\n  public destroy(id: string, callback?: () => void) {\n    if (this.siblings.has(id)) {\n      this.emit(id, {\n        change: RootControllerChanges.Remove,\n        element: null,\n        updateCallback: callback\n      });\n      this.siblings.delete(id);\n    } else if (callback) {\n      callback();\n    }\n  }\n\n  public setCallback(\n    callback: (id: string, action: RootControllerAction) => void\n  ) {\n    this.callback = callback;\n    this.pendingActions.forEach(({ id, action }) => {\n      callback(id, action);\n    });\n  }\n\n  private emit(id: string, action: RootControllerAction) {\n    if (this.callback) {\n      this.callback(id, action);\n    } else {\n      this.pendingActions.push({\n        action,\n        id\n      });\n    }\n  }\n}\n"],"mappings":";;AAEA,WAAYA,qBAIX;AAJD,WAAYA,qBAAqB;EAC/BA,qBAAA,CAAAA,qBAAA,0BAAM;EACNA,qBAAA,CAAAA,qBAAA,0BAAM;EACNA,qBAAA,CAAAA,qBAAA,0BAAM;AACR,CAAC,EAJWA,qBAAqB,KAArBA,qBAAqB;AAIhC,IAQoBC,cAAc;EAAnC,SAAAA,eAAA;IAAAC,eAAA,OAAAD,cAAA;IACU,KAAAE,QAAQ,GAAgB,IAAIC,GAAG,EAAE;IACjC,KAAAC,cAAc,GAGjB,EAAE;IACC,KAAAC,QAAQ,GAEL,IAAI;EAmDjB;EAACC,YAAA,CAAAN,cAAA;IAAAO,GAAA;IAAAC,KAAA,EAjDQ,SAAAC,OAAOC,EAAU,EAAEC,OAAkB,EAAEN,QAAqB;MACjE,IAAI,CAAC,IAAI,CAACH,QAAQ,CAACU,GAAG,CAACF,EAAE,CAAC,EAAE;QAC1B,IAAI,CAACG,IAAI,CAACH,EAAE,EAAE;UACZI,MAAM,EAAEf,qBAAqB,CAACgB,MAAM;UACpCJ,OAAO,EAAPA,OAAO;UACPK,cAAc,EAAEX;SACjB,CAAC;QACF,IAAI,CAACH,QAAQ,CAACe,GAAG,CAACP,EAAE,CAAC;OACtB,MAAM;QACL,IAAI,CAACG,IAAI,CAACH,EAAE,EAAE;UACZI,MAAM,EAAEf,qBAAqB,CAACmB,MAAM;UACpCP,OAAO,EAAPA,OAAO;UACPK,cAAc,EAAEX;SACjB,CAAC;;IAEN;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAEM,SAAAW,QAAQT,EAAU,EAAEL,QAAqB;MAC9C,IAAI,IAAI,CAACH,QAAQ,CAACU,GAAG,CAACF,EAAE,CAAC,EAAE;QACzB,IAAI,CAACG,IAAI,CAACH,EAAE,EAAE;UACZI,MAAM,EAAEf,qBAAqB,CAACqB,MAAM;UACpCT,OAAO,EAAE,IAAI;UACbK,cAAc,EAAEX;SACjB,CAAC;QACF,IAAI,CAACH,QAAQ,CAACmB,MAAM,CAACX,EAAE,CAAC;OACzB,MAAM,IAAIL,QAAQ,EAAE;QACnBA,QAAQ,EAAE;;IAEd;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAEM,SAAAc,YACLjB,QAA4D;MAE5D,IAAI,CAACA,QAAQ,GAAGA,QAAQ;MACxB,IAAI,CAACD,cAAc,CAACmB,OAAO,CAAC,UAAAC,IAAA,EAAmB;QAAA,IAAhBd,EAAE,GAAAc,IAAA,CAAFd,EAAE;UAAEe,MAAM,GAAAD,IAAA,CAANC,MAAM;QACvCpB,QAAQ,CAACK,EAAE,EAAEe,MAAM,CAAC;MACtB,CAAC,CAAC;IACJ;EAAC;IAAAlB,GAAA;IAAAC,KAAA,EAEO,SAAAK,KAAKH,EAAU,EAAEe,MAA4B;MACnD,IAAI,IAAI,CAACpB,QAAQ,EAAE;QACjB,IAAI,CAACA,QAAQ,CAACK,EAAE,EAAEe,MAAM,CAAC;OAC1B,MAAM;QACL,IAAI,CAACrB,cAAc,CAACsB,IAAI,CAAC;UACvBD,MAAM,EAANA,MAAM;UACNf,EAAE,EAAFA;SACD,CAAC;;IAEN;EAAC;EAAA,OAAAV,cAAA;AAAA;AAAA,SA1DkBA,cAAc,IAAA2B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}