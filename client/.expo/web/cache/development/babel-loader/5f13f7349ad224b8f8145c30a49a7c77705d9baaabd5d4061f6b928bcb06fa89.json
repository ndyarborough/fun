{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MultiImagePicker = function MultiImagePicker(_ref) {\n  var onImagesSelected = _ref.onImagesSelected;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    images = _useState2[0],\n    setImages = _useState2[1];\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var result = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n        multiple: true\n      });\n      if (!result.cancelled) {\n        setImages([].concat(_toConsumableArray(images), _toConsumableArray(result.assets)));\n        onImagesSelected([].concat(_toConsumableArray(images), _toConsumableArray(result.assets)));\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var removeImage = function removeImage(index) {\n    var updatedImages = _toConsumableArray(images);\n    updatedImages.splice(index, 1);\n    setImages(updatedImages);\n    onImagesSelected(updatedImages);\n  };\n  return _jsxs(View, {\n    children: [_jsx(Button, {\n      title: \"Pick images from camera roll\",\n      onPress: pickImage\n    }), _jsx(ScrollView, {\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      children: images.map(function (image, index) {\n        return _jsxs(View, {\n          style: styles.imageContainer,\n          children: [_jsx(Image, {\n            source: {\n              uri: image.uri\n            },\n            style: styles.image\n          }), _jsx(TouchableOpacity, {\n            style: styles.removeButton,\n            onPress: function onPress() {\n              return removeImage(index);\n            },\n            children: _jsx(Text, {\n              style: styles.removeButtonText,\n              children: \"X\"\n            })\n          })]\n        }, index);\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  imageContainer: {\n    position: 'relative'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    marginRight: 10\n  },\n  removeButton: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    backgroundColor: 'red',\n    padding: 5,\n    borderRadius: 10\n  },\n  removeButtonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default MultiImagePicker;","map":{"version":3,"names":["React","useState","View","Button","ScrollView","Image","TouchableOpacity","StyleSheet","Text","ImagePicker","jsx","_jsx","jsxs","_jsxs","MultiImagePicker","_ref","onImagesSelected","_useState","_useState2","_slicedToArray","images","setImages","pickImage","_ref2","_asyncToGenerator","result","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","multiple","cancelled","concat","_toConsumableArray","assets","apply","arguments","removeImage","index","updatedImages","splice","children","title","onPress","horizontal","showsHorizontalScrollIndicator","map","image","style","styles","imageContainer","source","uri","removeButton","removeButtonText","create","position","width","height","marginRight","top","right","backgroundColor","padding","borderRadius","color","fontWeight"],"sources":["C:/Users/dyarb/batcave/Meetup_2.0/client/components/MultiImagePicker.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Button, ScrollView, Image, TouchableOpacity, StyleSheet, Text } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nconst MultiImagePicker = ({ onImagesSelected }) => {\r\n  const [images, setImages] = useState([]);\r\n\r\n  const pickImage = async () => {\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n      allowsEditing: true,\r\n      aspect: [4, 3],\r\n      quality: 1,\r\n      multiple: true, // Enable multiple selection\r\n    });\r\n\r\n    if (!result.cancelled) {\r\n      setImages([...images, ...result.assets]); // Concatenate new images with existing ones\r\n      onImagesSelected([...images, ...result.assets]); // Notify parent component about the selected images\r\n    }\r\n  };\r\n\r\n  const removeImage = (index) => {\r\n    const updatedImages = [...images];\r\n    updatedImages.splice(index, 1);\r\n    setImages(updatedImages);\r\n    onImagesSelected(updatedImages); // Notify parent component about the updated images\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Button title=\"Pick images from camera roll\" onPress={pickImage} />\r\n      <ScrollView horizontal showsHorizontalScrollIndicator={false}>\r\n        {images.map((image, index) => (\r\n          <View key={index} style={styles.imageContainer}>\r\n            <Image source={{ uri: image.uri }} style={styles.image} />\r\n            <TouchableOpacity\r\n              style={styles.removeButton}\r\n              onPress={() => removeImage(index)}\r\n            >\r\n              {/* You can use any icon or text for the remove button */}\r\n              <Text style={styles.removeButtonText}>X</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        ))}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  imageContainer: {\r\n    position: 'relative',\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    marginRight: 10,\r\n  },\r\n  removeButton: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    backgroundColor: 'red',\r\n    padding: 5,\r\n    borderRadius: 10,\r\n  },\r\n  removeButtonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default MultiImagePicker;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}